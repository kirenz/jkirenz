<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Jan Kirenz</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Jan Kirenz</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Jan Kirenz, {year}</copyright>
    <lastBuildDate>Thu, 14 May 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Association Rule Mining in R</title>
      <link>/post/2020-05-14-r-association-rule-mining/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020-05-14-r-association-rule-mining/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/vis/vis.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/vis/vis.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/visNetwork-binding/visNetwork.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Introduction&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#the-market-basket-model&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; The market-basket model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#association-rules&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; Association rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#association-measures&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Association measures&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#support&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#confidence&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; Confidence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lift&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.3&lt;/span&gt; Lift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-priori-algorithm&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; A-Priori Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#implementation-in-r&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Implementation in R&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#transform-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; Transform data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#inspect-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; Inspect data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-priori-algorithm-1&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; A-Priori Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#set-lhs-and-rhs&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4&lt;/span&gt; Set LHS and RHS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#visualizing-association-rules&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5&lt;/span&gt; Visualizing association rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scatter-plot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.6&lt;/span&gt; Scatter-Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interactive-scatter-plot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.7&lt;/span&gt; Interactive scatter-plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph-based-visualization&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.8&lt;/span&gt; Graph-based visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parallel-coordinate-plot&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.9&lt;/span&gt; Parallel coordinate plot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Association rule mining is one of the most popular data mining methods. This kind of analysis is also called &lt;em&gt;frequent itemset analysis&lt;/em&gt;, &lt;em&gt;association analysis&lt;/em&gt; or &lt;em&gt;association rule learning&lt;/em&gt;. To perform the analysis in R, we use the &lt;code&gt;arules&lt;/code&gt; and &lt;code&gt;arulesViz&lt;/code&gt; packages.&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Introduction&lt;/h1&gt;
&lt;p&gt;In association analysis, we are usually interested in the absolute number of customer transactions (also called baskets) that contain a particular set of items (usually products). A typical application of association analysis is the analysis of consumer buying behavior in supermarkets and chain stores where they record the contents of shopping carts brought to the register for checkout. These transaction data are normally recorded by point-of-sale scanners and often consist of &lt;a href=&#34;https://en.wikipedia.org/wiki/Tuple&#34;&gt;tuples&lt;/a&gt; of the form: &lt;code&gt;{transaction ID, item ID, item ID, ...}&lt;/code&gt;. By finding frequent itemsets, a retailer can learn what is commonly bought together and use this information to increase sales in several ways.&lt;/p&gt;
&lt;p&gt;Imagine there is a pair of different products (which we call &lt;em&gt;items&lt;/em&gt;), &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt;, that are frequently bought together in a store (Ng &amp;amp; Soo, 2017):&lt;/p&gt;
&lt;style&gt;
div.blue { background-color:#e6f0ff; border-radius: 2px; padding: 10px;}
&lt;/style&gt;
&lt;div class=&#34;blue&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Both X and Y can be placed on the same shelf, so that buyers of one item would be prompted to buy the other.&lt;/li&gt;
&lt;li&gt;Promotional discounts could be applied to just one out of the two items.&lt;/li&gt;
&lt;li&gt;Advertisements on X could be targeted at buyers who purchase Y.&lt;/li&gt;
&lt;li&gt;X and Y could be combined into a new product, such as having Y in flavors of X.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Note that online retailers like Amazon.com or online platforms like Spotify have little need for this kind of analysis, since it is designed to search for itemsets that appear frequently. If the online retailer was limited to frequent itemsets, they would miss all the opportunities that are present in the “long tail” to select advertisements for each customer individually (for example to recommend certain products or songs). Instead of searching for &lt;em&gt;frequent&lt;/em&gt; itemsets, they use &lt;em&gt;similarity&lt;/em&gt; search algorithms (like &lt;em&gt;collaborative filtering&lt;/em&gt;) to detect similar customers that have a large fraction of their baskets in common, even if the absolute number of baskets is small. (Leskovec, Rajaraman, &amp;amp; Ullman, 2020)&lt;/p&gt;
&lt;div id=&#34;the-market-basket-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; The market-basket model&lt;/h2&gt;
&lt;p&gt;Association rule mining is based on the so called “market-basket” model of data. This is essentially a many-many relationship between two kinds of elements, called &lt;strong&gt;items&lt;/strong&gt; and &lt;strong&gt;baskets&lt;/strong&gt; (also called &lt;strong&gt;transactions&lt;/strong&gt;) with some assumptions about the shape of the data (Leskovec, Rajaraman, &amp;amp; Ullman, 2020):&lt;/p&gt;
&lt;div class=&#34;blue&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Each basket (i.e. transaction) consists of a set of items (usually products).&lt;/li&gt;
&lt;li&gt;Usually we assume that the number of items in a basket is small (much smaller than the total number of all items).&lt;/li&gt;
&lt;li&gt;The number of all baskets (transactions) is usually assumed to be very large.&lt;/li&gt;
&lt;li&gt;The data is assumed to be represented in a file consisting of a sequence of baskets (transactions).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;To illustrate the logic of association rule mining, let’s create a sequence of baskets (transactions) with a small number of items from different customers in a grocery store. Note that because we use a very simple example with only a few baskets and items, the results of the analysis will differ from the results we may obtain from a real world example. We save the data as a sequence of transactions with the name &lt;code&gt;market_basket&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create a list of baskets
market_basket &amp;lt;-  
  list(  
  c(&amp;quot;apple&amp;quot;, &amp;quot;beer&amp;quot;, &amp;quot;rice&amp;quot;, &amp;quot;meat&amp;quot;),
  c(&amp;quot;apple&amp;quot;, &amp;quot;beer&amp;quot;, &amp;quot;rice&amp;quot;),
  c(&amp;quot;apple&amp;quot;, &amp;quot;beer&amp;quot;), 
  c(&amp;quot;apple&amp;quot;, &amp;quot;pear&amp;quot;),
  c(&amp;quot;milk&amp;quot;, &amp;quot;beer&amp;quot;, &amp;quot;rice&amp;quot;, &amp;quot;meat&amp;quot;), 
  c(&amp;quot;milk&amp;quot;, &amp;quot;beer&amp;quot;, &amp;quot;rice&amp;quot;), 
  c(&amp;quot;milk&amp;quot;, &amp;quot;beer&amp;quot;),
  c(&amp;quot;milk&amp;quot;, &amp;quot;pear&amp;quot;)
  )

# set transaction names (T1 to T8)
names(market_basket) &amp;lt;- paste(&amp;quot;T&amp;quot;, c(1:8), sep = &amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each basket includes so called &lt;strong&gt;itemsets&lt;/strong&gt; (like {apple, beer, etc.}). You can observe that “apple” is bought together with “beer” in three transactions:&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://annalyzin.files.wordpress.com/2016/04/association-rule-support-table.png?w=652&amp;h=578&#34; alt=&#34;Market basket example (Ng &amp;amp; Soo, 2017)&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1.1: Market basket example (Ng &amp;amp; Soo, 2017)
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The frequent-itemsets problem is that of finding sets of items that appear in many of the baskets. Hence, a set of items that appears in many baskets is said to be “frequent”.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;association-rules&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; Association rules&lt;/h2&gt;
&lt;p&gt;While we are interested in extracting frequent sets of items, this information is often presented as a collection of &lt;em&gt;if–then rules&lt;/em&gt;, called &lt;strong&gt;association rules&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The form of an association rule is &lt;code&gt;{X -&amp;gt; Y}&lt;/code&gt;, where &lt;code&gt;{X}&lt;/code&gt; is a set of items and &lt;code&gt;{Y}&lt;/code&gt; is an item. The implication of this association rule is that if all of the items in &lt;code&gt;{X}&lt;/code&gt; appear in some basket, then &lt;code&gt;{Y}&lt;/code&gt; is “likely” to appear in that basket as well.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{X} is also called &lt;strong&gt;antecedent&lt;/strong&gt; or &lt;strong&gt;left-hand-side (LHS)&lt;/strong&gt; and&lt;/li&gt;
&lt;li&gt;{Y} is called &lt;strong&gt;consequent&lt;/strong&gt; or &lt;strong&gt;right-hand-side (RHS)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example association rule for products from Apple could be &lt;code&gt;{Apple iPad, Apple iPad Cover} -&amp;gt; {Apple Pencil}&lt;/code&gt;, meaning that if Apple’s iPad and iPad Cover &lt;code&gt;{X}&lt;/code&gt; are bought, customers are also likely to buy Apple’s Pencil &lt;code&gt;{Y}&lt;/code&gt;. Notice that the logical implication symbol “-&amp;gt;” does not indicate a causal relationship between {X} and {Y}. It is merely an estimate of the conditional probability of {Y} given {X}.&lt;/p&gt;
&lt;p&gt;Now imagine a grocery store with tens of thousands of different products. We wouldn’t want to calculate all associations between every possible combination of products. Instead, we would want to select only potentially “relevant” rules from the set of all possible rules. Therefore, we use the measures &lt;strong&gt;support&lt;/strong&gt;, &lt;strong&gt;confidence&lt;/strong&gt; and &lt;strong&gt;lift&lt;/strong&gt; to reduce the number of relationships we need to analyze:&lt;/p&gt;
&lt;div class=&#34;blue&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Support is an indication of how frequently a set of items appear in baskets.&lt;/li&gt;
&lt;li&gt;Confidence is an indication of how often the support-rule has been found to be true.&lt;/li&gt;
&lt;li&gt;Lift is a measure of association using both support and confidence.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;If we are looking for association rules {X -&amp;gt; Y} that apply to a reasonable fraction of the baskets, then the support of X must be reasonably high. In practice, such as for marketing in brick-and-mortar stores, “reasonably high” is often around 1% to 10% of the baskets. We also want the conﬁdence of the rule to be reasonably high, perhaps 50%, or else the rule has little practical effect. (Leskovec, Rajaraman, &amp;amp; Ullman, 2020)&lt;/p&gt;
&lt;p&gt;Furthermore, it must be assumed that there are not too many frequent itemsets and thus not too many candidates for high-support, high-conﬁdence association rules. The reason for this is that if we give companies to many association rules that meet our thresholds for support and conﬁdence, they cannot even read them, let alone act on them. Thus, it is normal to adjust the support and confidence thresholds so that we do not get too many frequent itemsets. (Leskovec, Rajaraman, &amp;amp; Ullman, 2020)&lt;/p&gt;
&lt;p&gt;Next, we take a closer look at the measures support, confidence and lift.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;association-measures&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Association measures&lt;/h1&gt;
&lt;div id=&#34;support&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; Support&lt;/h2&gt;
&lt;p&gt;The metric support tells us how popular a set of items is, as measured by the proportion of transactions in which the itemset appears.&lt;/p&gt;
&lt;p&gt;In our data, the support of {apple} is 4 out of 8, or 50%. The support of {apple, beer, rice} is 2 out of 8, or 25%.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Support(apple) = \frac{4}{8} = 0.5\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Or in general, for a set of items X:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ Support(X) = \frac{frequency(X)}{n} \]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;with n = number of all transactions (baskets).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usually, a specific support-threshold is used to reduce the number of itemsets we need to analyze. At the beginning of the analysis, we could set our support-threshold to 10%.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;confidence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; Confidence&lt;/h2&gt;
&lt;p&gt;Confidence tells us how likely an item Y is purchased given that item X is purchased, expressed as {X -&amp;gt; Y}. It is measured by the proportion of transactions with item X, in which item Y also appears. The confidence of a rule is defined as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ Confidence(X -&amp;gt; Y) = \frac{support(X \cup Y)}{support(X)} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hence, the confidence can be interpreted as an estimate of the probability &lt;code&gt;P(Y|X)&lt;/code&gt;. In other words, this is the probability of finding the RHS (Y) of the rule in transactions under the condition that these transactions also contain the LHS (X) (Hornik, Grün, &amp;amp; Hahsler, 2005). Confidence is directed and therefore usually gives different values for the rules &lt;code&gt;X -&amp;gt; Y&lt;/code&gt; and &lt;code&gt;Y -&amp;gt; X&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;span class=&#34;math inline&#34;&gt;\(support(X ∪ Y)\)&lt;/span&gt; means the support of the union of the items in X and Y. Since we usually state probabilities of events and not sets of items, we can rewrite &lt;span class=&#34;math inline&#34;&gt;\(support(X \cup Y)\)&lt;/span&gt; as the probability &lt;span class=&#34;math inline&#34;&gt;\(P(E_X \cap E_Y)\)&lt;/span&gt;, where &lt;span class=&#34;math inline&#34;&gt;\(E_{X}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(E_{Y}\)&lt;/span&gt; are the events that a transaction contains itemset X and Y, respectively (review &lt;a href=&#34;https://michael.hahsler.net/research/association_rules/measures.html&#34;&gt;this site&lt;/a&gt; from Michael Hahsler for a detailed explanation).&lt;/p&gt;
&lt;p&gt;In our example, the confidence that beer is purchased given that apple is purchased ({apple -&amp;gt; beer}) is 3 out of 4, or 75%. This means the conditional probability P(beer|apple) = 75%. Apple is the antecedent or left-hand-side (LHS) and beer is the consequent or right-hand-side (RHS).&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Confidence(apple -&amp;gt; beer ) = \frac{support(apple ∪ beer)}{support(apple)} = \frac{\frac{3}{8}{}{}}{\frac{4}{8}{}} = \frac{3}{4} = 0.75\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that the confidence measure might misrepresent the importance of an association. This is because it only accounts for how popular item X is (in our case apple) but not Y (in our case beer).&lt;/p&gt;
&lt;p&gt;If beer is also very popular in general, there will be a higher chance that a transaction containing apple will also contain beer, thus inflating the confidence measure. To account for the base popularity of both items, we use a third measure called lift.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lift&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.3&lt;/span&gt; Lift&lt;/h2&gt;
&lt;p&gt;Lift tells us how likely item Y is purchased when item X is purchased, while controlling for how popular items Y and X are. It measures how many times more often X and Y occur together than expected if they were statistically independent.&lt;/p&gt;
&lt;p&gt;In our example, lift is calculated as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Lift(apple -&amp;gt; beer ) = \frac{support(apple ∪ beer)}{support(apple) \times support(beer)}  = \frac{\frac{3}{8}{}{}}{\frac{4}{8}{\times \frac{6}{8}}} = \frac{\frac{3}{8}{}{}}{\frac{24}{64}} = \frac{\frac{3}{8}{}{}}{\frac{3}{8}} = 1\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;A lift value of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lift = 1&lt;/strong&gt;: implies no association between items.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lift &amp;gt; 1&lt;/strong&gt;: greater than 1 means that item Y is likely to be bought if item X is bought,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lift &amp;lt; 1&lt;/strong&gt;: less than 1 means that item Y is unlikely to be bought if item X is bought.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The lift of &lt;code&gt;{apple -&amp;gt; beer}&lt;/code&gt; is 1, which implies no association between the two items.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-priori-algorithm&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; A-Priori Algorithm&lt;/h1&gt;
&lt;p&gt;There are different algorithms for finding frequent item-sets. In this tutorial we cover the main idea behind the &lt;code&gt;A-Priori Algorithm&lt;/code&gt;, which reduces the number of itemsets we need to examine. It works by eliminating itemsets by looking ﬁrst at smaller sets and recognizing that a large set cannot be frequent unless all its subsets are. Put simply, the algorithm states that if an itemset is infrequent, then all its subsets must also be infrequent.&lt;/p&gt;
&lt;p&gt;This means that if item {beer} was found to be infrequent, we can expect the itemset {beer, pizza} to be equally or even more infrequent. So in consolidating the list of popular itemsets, we need not consider {beer, pizza}, nor any other itemset configuration that contains {beer}.&lt;/p&gt;
&lt;p&gt;The A-Priori Algorithm uses a so called &lt;em&gt;breadth-first&lt;/em&gt; search strategy, which can be viewed in this decision tree:&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-3&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/4/46/Animated_BFS.gif&#34; alt=&#34;Example of breadth-first search (source: [Matheny, 2007)](https://en.wikipedia.org/wiki/Breadth-first_search#/media/File:Animated_BFS.gif)&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3.1: Example of breadth-first search (source: &lt;a href=&#34;https://en.wikipedia.org/wiki/Breadth-first_search#/media/File:Animated_BFS.gif&#34;&gt;Matheny, 2007)&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Using this principle, the number of itemsets that have to be examined can be &lt;em&gt;pruned&lt;/em&gt; (i.e. removing sections of the decision tree).&lt;/p&gt;
&lt;p&gt;The list of popular itemsets can be obtained in these steps (Ng &amp;amp; Soo, 2017):&lt;/p&gt;
&lt;div class=&#34;blue&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 0. Start with itemsets containing just a single item, such as {apple} and {pear}.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 1. Determine the support-threshold for itemsets. Keep the itemsets that meet your minimum support threshold, and remove itemsets that do not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2. Using the itemsets you have kept from Step 1, generate all the possible itemset configurations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3. Repeat Steps 1 &amp;amp; 2 until there are no more new itemsets.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;This iterative process is illustrated in the animation below:&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-4&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://annalyzin.files.wordpress.com/2016/04/association-rules-apriori-tutorial-explanation.gif&#34; alt=&#34;A-Priori Algorithm (Ng &amp;amp; Soo, 2017)&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3.2: A-Priori Algorithm (Ng &amp;amp; Soo, 2017)
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As seen in the animation, {apple} was determine to have low support, hence it was removed and all other itemset configurations that contain apple need not be considered. This reduced the number of itemsets to consider by more than half.&lt;/p&gt;
&lt;p&gt;Note that the &lt;strong&gt;support threshold&lt;/strong&gt; that you pick in Step 1 could be based on a formal analysis or past experience. If you discover that sales of items beyond a certain proportion tend to have a significant impact on your profits, you might consider using that proportion as your support threshold (otherwise you may use 1%-10% as a starting value).&lt;/p&gt;
&lt;p&gt;We have seen how the A-Priori Algorithm can be used to identify itemsets with high support. The same principle can also be used to identify item associations with high &lt;strong&gt;confidence&lt;/strong&gt; or &lt;strong&gt;lift&lt;/strong&gt;. Finding rules with high confidence or lift is less computationally taxing once high-support itemsets have been identified, because confidence and lift values are calculated using support values (Ng &amp;amp; Soo, 2017).&lt;/p&gt;
&lt;p&gt;Take for example the task of finding high-confidence rules. If the rule&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{beer, chips -&amp;gt; apple}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;has low confidence, all other rules with the same left hand side (LHS) items and with apple on the right hand side (RHS) would have low confidence too. Specifically, the rules&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{beer -&amp;gt; apple, chips}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{chips -&amp;gt; apple, beer}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;would have low confidence as well. As before, lower level candidate item rules can be pruned using the A-Priori Algorithm, so that fewer candidate rules need to be examined (Ng &amp;amp; Soo, 2017).&lt;/p&gt;
&lt;p&gt;In summary, when you apply the A-Priori Algorithm on a given set of transactions, your goal will be to find all rules with support greater than or equal to your support threshold and confidence greater than or equal to your confidence threshold.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;implementation-in-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Implementation in R&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;arules&amp;quot;)
install.packages(&amp;quot;arulesViz&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To perform the association analysis in R, we use the &lt;code&gt;arules&lt;/code&gt; and &lt;code&gt;arulesViz&lt;/code&gt; packages. Review Hornik et al. (2005) for a detailed description of the packages or visit the &lt;a href=&#34;http://mhahsler.github.io/arules/&#34;&gt;arules documentation site&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;transform-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; Transform data&lt;/h2&gt;
&lt;p&gt;First of all, you have to load the transaction data into an object of the “transaction class” to be able to analyze the data. This is done by using the following function of the &lt;code&gt;arules&lt;/code&gt; package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(arules)

trans &amp;lt;- as(market_basket, &amp;quot;transactions&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;inspect-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; Inspect data&lt;/h2&gt;
&lt;p&gt;Take a look at the dimensions of this object:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8 6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This means we have 8 transactions and 6 distinct items.&lt;/p&gt;
&lt;p&gt;Obtain a list of the distinct items in the data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;itemLabels(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;apple&amp;quot; &amp;quot;beer&amp;quot;  &amp;quot;meat&amp;quot;  &amp;quot;milk&amp;quot;  &amp;quot;pear&amp;quot;  &amp;quot;rice&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;View the summary of the transaction data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## transactions as itemMatrix in sparse format with
##  8 rows (elements/itemsets/transactions) and
##  6 columns (items) and a density of 0.4583333 
## 
## most frequent items:
##    beer   apple    milk    rice    meat (Other) 
##       6       4       4       4       2       2 
## 
## element (itemset/transaction) length distribution:
## sizes
## 2 3 4 
## 4 2 2 
## 
##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##    2.00    2.00    2.50    2.75    3.25    4.00 
## 
## includes extended item information - examples:
##   labels
## 1  apple
## 2   beer
## 3   meat
## 
## includes extended transaction information - examples:
##   transactionID
## 1            T1
## 2            T2
## 3            T3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;summary()&lt;/code&gt; gives us information about our transaction object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There are 8 transactions (rows) and 6 items (columns) and we can view the most frequent items.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Density tells us the percentage of non-zero cells in this 8x6-matrix.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Element length distribution: a set of 2 items in 4 transactions; 3 items in 2 of the transactions and 4 items in 2 transactions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that a matrix is called a &lt;strong&gt;sparse matrix&lt;/strong&gt; if most of the elements are zero. By contrast, if most of the elements are nonzero, then the matrix is considered dense. The number of zero-valued elements divided by the total number of elements is called the &lt;em&gt;sparsity&lt;/em&gt; of the matrix (which is equal to 1 minus the density of the matrix).&lt;/p&gt;
&lt;p&gt;Take a look at all transactions and items in a matrix like fashion:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;image(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-14-r-association-rule-mining/index_files/figure-html/Matrix%20of%20transactions%20and%20items-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can observe that almost half of the “cells” (45,83 %) are non zero values.&lt;/p&gt;
&lt;p&gt;Display the relative item frequency:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;itemFrequencyPlot(trans, topN=10,  cex.names=1)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-10&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2020-05-14-r-association-rule-mining/index_files/figure-html/unnamed-chunk-10-1.png&#34; alt=&#34;Relative item frequency&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.1: Relative item frequency
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The items {apple}, {milk} and {rice} all have a relative item frequency (i.e. support) of 50%.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-priori-algorithm-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; A-Priori Algorithm&lt;/h2&gt;
&lt;p&gt;The next step is to analyze the rules using the A-Priori Algorithm with the function &lt;code&gt;apriori()&lt;/code&gt;. This function requires both a minimum support and a minimum confidence constraint at the same time. The option &lt;code&gt;parameter&lt;/code&gt; will allow you to set the &lt;em&gt;support-threshold&lt;/em&gt;, &lt;em&gt;confidence-threshold&lt;/em&gt; as well as the maximum lenght of items (&lt;code&gt;maxlen&lt;/code&gt;). If you do not provide threshold values, the function will perform the analysis with these default values: support-threshold of 0.1 and confidence-threshold of 0.8.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Min Support 0.3, confidence as 0.5.
rules &amp;lt;- apriori(trans, 
                 parameter = list(supp=0.3, conf=0.5, 
                                  maxlen=10, 
                                  target= &amp;quot;rules&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Apriori
## 
## Parameter specification:
##  confidence minval smax arem  aval originalSupport maxtime support minlen
##         0.5    0.1    1 none FALSE            TRUE       5     0.3      1
##  maxlen target   ext
##      10  rules FALSE
## 
## Algorithmic control:
##  filter tree heap memopt load sort verbose
##     0.1 TRUE TRUE  FALSE TRUE    2    TRUE
## 
## Absolute minimum support count: 2 
## 
## set item appearances ...[0 item(s)] done [0.00s].
## set transactions ...[6 item(s), 8 transaction(s)] done [0.00s].
## sorting and recoding items ... [4 item(s)] done [0.00s].
## creating transaction tree ... done [0.00s].
## checking subsets of size 1 2 done [0.00s].
## writing ... [10 rule(s)] done [0.00s].
## creating S4 object  ... done [0.00s].&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In our simple example, we already know that by using a support-threshold of 0.3, we will eliminate {meat} and {pear} from our analysis, since they have support values below 0.3.&lt;/p&gt;
&lt;p&gt;The summary shows the following:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(rules)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## set of 10 rules
## 
## rule length distribution (lhs + rhs):sizes
## 1 2 
## 4 6 
## 
##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##     1.0     1.0     2.0     1.6     2.0     2.0 
## 
## summary of quality measures:
##     support        confidence          lift           count    
##  Min.   :0.375   Min.   :0.5000   Min.   :1.000   Min.   :3.0  
##  1st Qu.:0.375   1st Qu.:0.5000   1st Qu.:1.000   1st Qu.:3.0  
##  Median :0.500   Median :0.5833   Median :1.000   Median :4.0  
##  Mean   :0.475   Mean   :0.6417   Mean   :1.067   Mean   :3.8  
##  3rd Qu.:0.500   3rd Qu.:0.7500   3rd Qu.:1.000   3rd Qu.:4.0  
##  Max.   :0.750   Max.   :1.0000   Max.   :1.333   Max.   :6.0  
## 
## mining info:
##   data ntransactions support confidence
##  trans             8     0.3        0.5&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Set of rules: 10.&lt;/li&gt;
&lt;li&gt;Rule length distribution (LHS + RHS): 4 rules with a length of 1 item; 6 rules with a length of 2 items.&lt;/li&gt;
&lt;li&gt;Summary of quality measures: min, max, median, mean and quantile values for support, confidence and lift.&lt;/li&gt;
&lt;li&gt;Mining info: number of transactions, support-threshold and confidence-threshold.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspect the 10 rules we obtained:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;inspect(rules)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      lhs        rhs     support confidence lift     count
## [1]  {}      =&amp;gt; {apple} 0.500   0.5000000  1.000000 4    
## [2]  {}      =&amp;gt; {milk}  0.500   0.5000000  1.000000 4    
## [3]  {}      =&amp;gt; {rice}  0.500   0.5000000  1.000000 4    
## [4]  {}      =&amp;gt; {beer}  0.750   0.7500000  1.000000 6    
## [5]  {apple} =&amp;gt; {beer}  0.375   0.7500000  1.000000 3    
## [6]  {beer}  =&amp;gt; {apple} 0.375   0.5000000  1.000000 3    
## [7]  {milk}  =&amp;gt; {beer}  0.375   0.7500000  1.000000 3    
## [8]  {beer}  =&amp;gt; {milk}  0.375   0.5000000  1.000000 3    
## [9]  {rice}  =&amp;gt; {beer}  0.500   1.0000000  1.333333 4    
## [10] {beer}  =&amp;gt; {rice}  0.500   0.6666667  1.333333 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The rules 1 to 4 with an empty LHS mean that no matter what other items are involved the item in the RHS will appear with the probability given by the rule’s confidence (which equals the support). If you want to avoid these rules then use the argument &lt;code&gt;parameter=list(minlen=2)&lt;/code&gt; (&lt;a href=&#34;https://stackoverflow.com/a/38994066&#34;&gt;stackoverflow&lt;/a&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Min Support 0.3, confidence as 0.5.
rules &amp;lt;- apriori(trans, 
                        parameter = list(supp=0.3, conf=0.5, 
                                         maxlen=10, 
                                         minlen=2,
                                         target= &amp;quot;rules&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Apriori
## 
## Parameter specification:
##  confidence minval smax arem  aval originalSupport maxtime support minlen
##         0.5    0.1    1 none FALSE            TRUE       5     0.3      2
##  maxlen target   ext
##      10  rules FALSE
## 
## Algorithmic control:
##  filter tree heap memopt load sort verbose
##     0.1 TRUE TRUE  FALSE TRUE    2    TRUE
## 
## Absolute minimum support count: 2 
## 
## set item appearances ...[0 item(s)] done [0.00s].
## set transactions ...[6 item(s), 8 transaction(s)] done [0.00s].
## sorting and recoding items ... [4 item(s)] done [0.00s].
## creating transaction tree ... done [0.00s].
## checking subsets of size 1 2 done [0.00s].
## writing ... [6 rule(s)] done [0.00s].
## creating S4 object  ... done [0.00s].&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;inspect(rules)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     lhs        rhs     support confidence lift     count
## [1] {apple} =&amp;gt; {beer}  0.375   0.7500000  1.000000 3    
## [2] {beer}  =&amp;gt; {apple} 0.375   0.5000000  1.000000 3    
## [3] {milk}  =&amp;gt; {beer}  0.375   0.7500000  1.000000 3    
## [4] {beer}  =&amp;gt; {milk}  0.375   0.5000000  1.000000 3    
## [5] {rice}  =&amp;gt; {beer}  0.500   1.0000000  1.333333 4    
## [6] {beer}  =&amp;gt; {rice}  0.500   0.6666667  1.333333 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can observe that rule 6 states that {beer -&amp;gt; rice} has a support of 50% and a confidence of 67%. This means this rule was found in 50% of all transactions. The confidence that rice (LHS) is purchased given beer (RHS) is purchased (P(rice|beer)) is 67%. In other words, 67% of the times a customer buys beer, rice is bought as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;set-lhs-and-rhs&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4&lt;/span&gt; Set LHS and RHS&lt;/h2&gt;
&lt;p&gt;If you want to analyze a specific rule, you can use the option &lt;code&gt;appearance&lt;/code&gt; to set a LHS (if part) or RHS (then part) of the rule.&lt;/p&gt;
&lt;p&gt;For example, to analyze what items customers buy &lt;em&gt;before&lt;/em&gt; buying {beer}, we set &lt;code&gt;rhs=beer&lt;/code&gt;and &lt;code&gt;default=lhs&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beer_rules_rhs &amp;lt;- apriori(trans, 
                          parameter = list(supp=0.3, conf=0.5, 
                                         maxlen=10, 
                                         minlen=2),
                          appearance = list(default=&amp;quot;lhs&amp;quot;, rhs=&amp;quot;beer&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Apriori
## 
## Parameter specification:
##  confidence minval smax arem  aval originalSupport maxtime support minlen
##         0.5    0.1    1 none FALSE            TRUE       5     0.3      2
##  maxlen target   ext
##      10  rules FALSE
## 
## Algorithmic control:
##  filter tree heap memopt load sort verbose
##     0.1 TRUE TRUE  FALSE TRUE    2    TRUE
## 
## Absolute minimum support count: 2 
## 
## set item appearances ...[1 item(s)] done [0.00s].
## set transactions ...[6 item(s), 8 transaction(s)] done [0.00s].
## sorting and recoding items ... [4 item(s)] done [0.00s].
## creating transaction tree ... done [0.00s].
## checking subsets of size 1 2 done [0.00s].
## writing ... [3 rule(s)] done [0.00s].
## creating S4 object  ... done [0.00s].&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Inspect the result:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;inspect(beer_rules_rhs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     lhs        rhs    support confidence lift     count
## [1] {apple} =&amp;gt; {beer} 0.375   0.75       1.000000 3    
## [2] {milk}  =&amp;gt; {beer} 0.375   0.75       1.000000 3    
## [3] {rice}  =&amp;gt; {beer} 0.500   1.00       1.333333 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also possible to analyze what items customers buy &lt;em&gt;after&lt;/em&gt; buying {beer}:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beer_rules_lhs &amp;lt;- apriori(trans, 
                          parameter = list(supp=0.3, conf=0.5, 
                                         maxlen=10, 
                                         minlen=2),
                          appearance = list(lhs=&amp;quot;beer&amp;quot;, default=&amp;quot;rhs&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Apriori
## 
## Parameter specification:
##  confidence minval smax arem  aval originalSupport maxtime support minlen
##         0.5    0.1    1 none FALSE            TRUE       5     0.3      2
##  maxlen target   ext
##      10  rules FALSE
## 
## Algorithmic control:
##  filter tree heap memopt load sort verbose
##     0.1 TRUE TRUE  FALSE TRUE    2    TRUE
## 
## Absolute minimum support count: 2 
## 
## set item appearances ...[1 item(s)] done [0.00s].
## set transactions ...[6 item(s), 8 transaction(s)] done [0.00s].
## sorting and recoding items ... [4 item(s)] done [0.00s].
## creating transaction tree ... done [0.00s].
## checking subsets of size 1 2 done [0.00s].
## writing ... [3 rule(s)] done [0.00s].
## creating S4 object  ... done [0.00s].&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Inspect the result:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;inspect(beer_rules_lhs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     lhs       rhs     support confidence lift     count
## [1] {beer} =&amp;gt; {apple} 0.375   0.5000000  1.000000 3    
## [2] {beer} =&amp;gt; {milk}  0.375   0.5000000  1.000000 3    
## [3] {beer} =&amp;gt; {rice}  0.500   0.6666667  1.333333 4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-association-rules&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5&lt;/span&gt; Visualizing association rules&lt;/h2&gt;
&lt;p&gt;Mining association rules often results in a very large number of found rules, leaving the analyst with the task to go through all the rules and discover interesting ones. Sifting manually through large sets of rules is time consuming and strenuous. Therefore, in addition to our calculations of associations, we can use the package &lt;a href=&#34;https://github.com/mhahsler/arulesViz&#34;&gt;&lt;code&gt;arulesViz&lt;/code&gt;&lt;/a&gt; to visualize our results as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scatter-plots,&lt;/li&gt;
&lt;li&gt;interactive scatter-plots and&lt;/li&gt;
&lt;li&gt;Individual rule representations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a detailed discussion of the different visualization techniques, review Hahsler &amp;amp; Karpienko (2017).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scatter-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.6&lt;/span&gt; Scatter-Plot&lt;/h2&gt;
&lt;p&gt;A scatter plot for association rules uses two interest measures, one on each of the axes. The default plot for association rules in arulesViz is a scatter plot using support and confidence on the axes. The measure defined by shading (default: lift) is visualized by the color of the points. A color key is provided to the right of the plot.&lt;/p&gt;
&lt;p&gt;To visualize our association rules in a scatter plot, we use the function &lt;code&gt;plot()&lt;/code&gt; of the arulesViz package. You can use the function as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot(x, method, measure, shading, control, data, engine)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a detailed description, review the &lt;a href=&#34;https://cran.r-project.org/web/packages/arulesViz/arulesViz.pdf&#34;&gt;vignette of the package&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;: an object of class “rules” or “itemsets”.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;: a string with value “scatterplot”, “two-key plot”, “matrix”, “matrix3D”, “mo-saic”, “doubledecker”, “graph”, “paracoord” or “grouped”, “iplots” selecting the visualization method.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;measure&lt;/code&gt;: measure(s) of interestingness (e.g., “support”, “confidence”, “lift”, “order”) used in the visualization.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shading&lt;/code&gt;: measure of interestingness used for the color of the points/arrows/nodes (e.g., “support”, “confidence”, “lift”). The default is “lift”.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control&lt;/code&gt;: a list of control parameters for the plot. The available control parameters depend
on the used visualization method.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;: the dataset (class “transactions”) used to generate the rules/itemsets. Only “mo-saic” and “doubledecker” require the original data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;engine&lt;/code&gt;: a string indicating the plotting engine used to render the plot. The “default” en- gine uses (mostly) grid, but some plots can produce interactive interactive grid visualizations using engine “interactive”, or HTML widgets using engine “html- widget”.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a basic plot with default settings, just insert the object x (in our case rules). This visualization method draws a two dimensional scatter plot with different measures of interestingness (parameter “measure”) on the axes and a third measure (parameter “shading”) is represented by the color of the points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(arulesViz)

plot(rules)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-20&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2020-05-14-r-association-rule-mining/index_files/figure-html/unnamed-chunk-20-1.png&#34; alt=&#34;Scatter plot&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.2: Scatter plot
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The plot shows support on the x-axis and confidence on the y-axis. Lift ist shown as a color with different levels ranging from grey to red.&lt;/p&gt;
&lt;p&gt;We could also use only “confidence” as a specific measure of interest:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(rules, measure = &amp;quot;confidence&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-21&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2020-05-14-r-association-rule-mining/index_files/figure-html/unnamed-chunk-21-1.png&#34; alt=&#34;Scatter plot with confidence as measure of interest&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.3: Scatter plot with confidence as measure of interest
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There is a special value for shading called “order” which produces a two-key plot where the color of the points represents the length (order) of the rule if you select &lt;code&gt;method = &#34;two-key plot&lt;/code&gt;. This is basically a scatterplot with &lt;code&gt;shading = &#34;order&#34;&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(rules, method = &amp;quot;two-key plot&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-22&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2020-05-14-r-association-rule-mining/index_files/figure-html/unnamed-chunk-22-1.png&#34; alt=&#34;Two-key plot&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.4: Two-key plot
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;interactive-scatter-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.7&lt;/span&gt; Interactive scatter-plot&lt;/h2&gt;
&lt;p&gt;Plot an interactive scatter plot for association rules using &lt;a href=&#34;https://plotly-r.com/index.html&#34;&gt;plotly&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(rules, engine = &amp;quot;plotly&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-23&#34;&gt;&lt;/span&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;2ebf4965bf82&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;2ebf4965bf82&#34;,&#34;attrs&#34;:{&#34;2ebf4965bf82&#34;:{&#34;x&#34;:[0.372843329000752,0.374257025711704,0.374854304845212,0.375451007452793,0.50124242358841,0.501907933545299],&#34;y&#34;:[0.749181014851698,0.499736960147629,0.75085147463073,0.499222260504251,0.998594967072699,0.66606791784155],&#34;hoverinfo&#34;:&#34;text&#34;,&#34;text&#34;:[&#34;[1]&lt;BR&gt; &lt;B&gt;{apple}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.75 &lt;BR&gt;lift: 1&#34;,&#34;[2]&lt;BR&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{apple}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.5 &lt;BR&gt;lift: 1&#34;,&#34;[3]&lt;BR&gt; &lt;B&gt;{milk}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.75 &lt;BR&gt;lift: 1&#34;,&#34;[4]&lt;BR&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{milk}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.5 &lt;BR&gt;lift: 1&#34;,&#34;[5]&lt;BR&gt; &lt;B&gt;{rice}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.5 &lt;BR&gt;confidence: 1 &lt;BR&gt;lift: 1.33&#34;,&#34;[6]&lt;BR&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{rice}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.5 &lt;BR&gt;confidence: 0.667 &lt;BR&gt;lift: 1.33&#34;],&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:[],&#34;color&#34;:[1,1,1,1,1.33333333333333,1.33333333333333],&#34;colors&#34;:[&#34;#EEEEEEFF&#34;,&#34;#EE0000FF&#34;],&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;support&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;title&#34;:&#34;confidence&#34;},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;yanchor&#34;:&#34;top&#34;,&#34;y&#34;:0.5}},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;showSendToCloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[0.372843329000752,0.374257025711704,0.374854304845212,0.375451007452793,0.50124242358841,0.501907933545299],&#34;y&#34;:[0.749181014851698,0.499736960147629,0.75085147463073,0.499222260504251,0.998594967072699,0.66606791784155],&#34;hoverinfo&#34;:[&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;,&#34;text&#34;],&#34;text&#34;:[&#34;[1]&lt;BR&gt; &lt;B&gt;{apple}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.75 &lt;BR&gt;lift: 1&#34;,&#34;[2]&lt;BR&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{apple}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.5 &lt;BR&gt;lift: 1&#34;,&#34;[3]&lt;BR&gt; &lt;B&gt;{milk}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.75 &lt;BR&gt;lift: 1&#34;,&#34;[4]&lt;BR&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{milk}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.375 &lt;BR&gt;confidence: 0.5 &lt;BR&gt;lift: 1&#34;,&#34;[5]&lt;BR&gt; &lt;B&gt;{rice}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.5 &lt;BR&gt;confidence: 1 &lt;BR&gt;lift: 1.33&#34;,&#34;[6]&lt;BR&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{rice}&lt;\/B&gt; &lt;BR&gt;&lt;BR&gt;support: 0.5 &lt;BR&gt;confidence: 0.667 &lt;BR&gt;lift: 1.33&#34;],&#34;mode&#34;:&#34;markers&#34;,&#34;type&#34;:&#34;scatter&#34;,&#34;marker&#34;:{&#34;colorbar&#34;:{&#34;title&#34;:&#34;&#34;,&#34;ticklen&#34;:2},&#34;cmin&#34;:1,&#34;cmax&#34;:1.33333333333333,&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(238,238,238,1)&#34;],[&#34;0.0416666666666665&#34;,&#34;rgba(241,231,228,1)&#34;],[&#34;0.0833333333333331&#34;,&#34;rgba(244,223,218,1)&#34;],[&#34;0.125&#34;,&#34;rgba(247,216,208,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(249,208,198,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(251,201,188,1)&#34;],[&#34;0.25&#34;,&#34;rgba(252,193,178,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(253,186,168,1)&#34;],[&#34;0.333333333333334&#34;,&#34;rgba(254,178,158,1)&#34;],[&#34;0.375&#34;,&#34;rgba(255,170,149,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(255,163,139,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(255,155,130,1)&#34;],[&#34;0.5&#34;,&#34;rgba(255,147,120,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(255,139,111,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(254,131,102,1)&#34;],[&#34;0.625&#34;,&#34;rgba(253,123,92,1)&#34;],[&#34;0.666666666666666&#34;,&#34;rgba(252,114,83,1)&#34;],[&#34;0.708333333333334&#34;,&#34;rgba(251,105,74,1)&#34;],[&#34;0.75&#34;,&#34;rgba(250,96,65,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(248,86,56,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(246,76,46,1)&#34;],[&#34;0.875&#34;,&#34;rgba(245,65,37,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(242,51,26,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(240,34,14,1)&#34;],[&#34;1&#34;,&#34;rgba(238,0,0,1)&#34;]],&#34;showscale&#34;:false,&#34;color&#34;:[1,1,1,1,1.33333333333333,1.33333333333333],&#34;line&#34;:{&#34;colorbar&#34;:{&#34;title&#34;:&#34;&#34;,&#34;ticklen&#34;:2},&#34;cmin&#34;:1,&#34;cmax&#34;:1.33333333333333,&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(238,238,238,1)&#34;],[&#34;0.0416666666666665&#34;,&#34;rgba(241,231,228,1)&#34;],[&#34;0.0833333333333331&#34;,&#34;rgba(244,223,218,1)&#34;],[&#34;0.125&#34;,&#34;rgba(247,216,208,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(249,208,198,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(251,201,188,1)&#34;],[&#34;0.25&#34;,&#34;rgba(252,193,178,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(253,186,168,1)&#34;],[&#34;0.333333333333334&#34;,&#34;rgba(254,178,158,1)&#34;],[&#34;0.375&#34;,&#34;rgba(255,170,149,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(255,163,139,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(255,155,130,1)&#34;],[&#34;0.5&#34;,&#34;rgba(255,147,120,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(255,139,111,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(254,131,102,1)&#34;],[&#34;0.625&#34;,&#34;rgba(253,123,92,1)&#34;],[&#34;0.666666666666666&#34;,&#34;rgba(252,114,83,1)&#34;],[&#34;0.708333333333334&#34;,&#34;rgba(251,105,74,1)&#34;],[&#34;0.75&#34;,&#34;rgba(250,96,65,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(248,86,56,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(246,76,46,1)&#34;],[&#34;0.875&#34;,&#34;rgba(245,65,37,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(242,51,26,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(240,34,14,1)&#34;],[&#34;1&#34;,&#34;rgba(238,0,0,1)&#34;]],&#34;showscale&#34;:false,&#34;color&#34;:[1,1,1,1,1.33333333333333,1.33333333333333]}},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[0.372843329000752,0.501907933545299],&#34;y&#34;:[0.499222260504251,0.998594967072699],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;opacity&#34;:0,&#34;hoverinfo&#34;:&#34;none&#34;,&#34;showlegend&#34;:false,&#34;marker&#34;:{&#34;colorbar&#34;:{&#34;title&#34;:&#34;lift&#34;,&#34;ticklen&#34;:2,&#34;len&#34;:0.5,&#34;lenmode&#34;:&#34;fraction&#34;,&#34;y&#34;:1,&#34;yanchor&#34;:&#34;top&#34;},&#34;cmin&#34;:1,&#34;cmax&#34;:1.33333333333333,&#34;colorscale&#34;:[[&#34;0&#34;,&#34;rgba(238,238,238,1)&#34;],[&#34;0.0416666666666665&#34;,&#34;rgba(241,231,228,1)&#34;],[&#34;0.0833333333333331&#34;,&#34;rgba(244,223,218,1)&#34;],[&#34;0.125&#34;,&#34;rgba(247,216,208,1)&#34;],[&#34;0.166666666666667&#34;,&#34;rgba(249,208,198,1)&#34;],[&#34;0.208333333333333&#34;,&#34;rgba(251,201,188,1)&#34;],[&#34;0.25&#34;,&#34;rgba(252,193,178,1)&#34;],[&#34;0.291666666666667&#34;,&#34;rgba(253,186,168,1)&#34;],[&#34;0.333333333333334&#34;,&#34;rgba(254,178,158,1)&#34;],[&#34;0.375&#34;,&#34;rgba(255,170,149,1)&#34;],[&#34;0.416666666666667&#34;,&#34;rgba(255,163,139,1)&#34;],[&#34;0.458333333333333&#34;,&#34;rgba(255,155,130,1)&#34;],[&#34;0.5&#34;,&#34;rgba(255,147,120,1)&#34;],[&#34;0.541666666666667&#34;,&#34;rgba(255,139,111,1)&#34;],[&#34;0.583333333333333&#34;,&#34;rgba(254,131,102,1)&#34;],[&#34;0.625&#34;,&#34;rgba(253,123,92,1)&#34;],[&#34;0.666666666666666&#34;,&#34;rgba(252,114,83,1)&#34;],[&#34;0.708333333333334&#34;,&#34;rgba(251,105,74,1)&#34;],[&#34;0.75&#34;,&#34;rgba(250,96,65,1)&#34;],[&#34;0.791666666666667&#34;,&#34;rgba(248,86,56,1)&#34;],[&#34;0.833333333333333&#34;,&#34;rgba(246,76,46,1)&#34;],[&#34;0.875&#34;,&#34;rgba(245,65,37,1)&#34;],[&#34;0.916666666666667&#34;,&#34;rgba(242,51,26,1)&#34;],[&#34;0.958333333333333&#34;,&#34;rgba(240,34,14,1)&#34;],[&#34;1&#34;,&#34;rgba(238,0,0,1)&#34;]],&#34;showscale&#34;:true,&#34;color&#34;:[1,1.33333333333333],&#34;line&#34;:{&#34;color&#34;:&#34;rgba(255,127,14,1)&#34;}},&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;shinyEvents&#34;:[&#34;plotly_hover&#34;,&#34;plotly_click&#34;,&#34;plotly_selected&#34;,&#34;plotly_relayout&#34;,&#34;plotly_brushed&#34;,&#34;plotly_brushing&#34;,&#34;plotly_clickannotation&#34;,&#34;plotly_doubleclick&#34;,&#34;plotly_deselect&#34;,&#34;plotly_afterplot&#34;,&#34;plotly_sunburstclick&#34;],&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.5: Interactive scatter-plot
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;graph-based-visualization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.8&lt;/span&gt; Graph-based visualization&lt;/h2&gt;
&lt;p&gt;Graph-based techniques concentrate on the relationship between individual items in the rule set. They represent the rules (or itemsets) as a graph with items as labeled vertices, and rules (or itemsets) represented as vertices connected to items using arrows.&lt;/p&gt;
&lt;p&gt;For rules, the LHS items are connected with arrows pointing to the vertex representing the rule and the RHS has an arrow pointing to the item.&lt;/p&gt;
&lt;p&gt;Several engines are available. The default engine uses igraph (plot.igraph and tkplot for the interactive visualization). … arguments are passed on to the respective plotting function (use for color, etc.).&lt;/p&gt;
&lt;p&gt;The network graph below shows associations between selected items. Larger circles imply higher support, while red circles imply higher lift. Graphs only work well with very few rules, why we only use a subset of 10 rules from our data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;subrules &amp;lt;- head(rules, n = 10, by = &amp;quot;confidence&amp;quot;)

plot(subrules, method = &amp;quot;graph&amp;quot;,  engine = &amp;quot;htmlwidget&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-24&#34;&gt;&lt;/span&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;visNetwork html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;nodes&#34;:{&#34;id&#34;:[1,2,3,4,5,6,7,8,9,10],&#34;label&#34;:[&#34;rice&#34;,&#34;apple&#34;,&#34;milk&#34;,&#34;beer&#34;,&#34;rule 1&#34;,&#34;rule 2&#34;,&#34;rule 3&#34;,&#34;rule 4&#34;,&#34;rule 5&#34;,&#34;rule 6&#34;],&#34;group&#34;:[&#34;item&#34;,&#34;item&#34;,&#34;item&#34;,&#34;item&#34;,&#34;rule&#34;,&#34;rule&#34;,&#34;rule&#34;,&#34;rule&#34;,&#34;rule&#34;,&#34;rule&#34;],&#34;value&#34;:[1,1,1,1,100,1,1,100,1,1],&#34;color&#34;:[&#34;#CBD2FC&#34;,&#34;#CBD2FC&#34;,&#34;#CBD2FC&#34;,&#34;#CBD2FC&#34;,&#34;#EE1B1B&#34;,&#34;#EEDCDC&#34;,&#34;#EEDCDC&#34;,&#34;#EE1B1B&#34;,&#34;#EEDCDC&#34;,&#34;#EEDCDC&#34;],&#34;title&#34;:[&#34;rice&#34;,&#34;apple&#34;,&#34;milk&#34;,&#34;beer&#34;,&#34;&lt;B&gt;[1]&lt;\/B&gt;&lt;BR&gt;&lt;B&gt;{rice}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&lt;BR&gt;support = 0.5&lt;BR&gt;confidence = 1&lt;BR&gt;lift = 1.33&lt;BR&gt;count = 4&lt;BR&gt;order = 2&#34;,&#34;&lt;B&gt;[2]&lt;\/B&gt;&lt;BR&gt;&lt;B&gt;{apple}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&lt;BR&gt;support = 0.375&lt;BR&gt;confidence = 0.75&lt;BR&gt;lift = 1&lt;BR&gt;count = 3&lt;BR&gt;order = 2&#34;,&#34;&lt;B&gt;[3]&lt;\/B&gt;&lt;BR&gt;&lt;B&gt;{milk}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&lt;BR&gt;support = 0.375&lt;BR&gt;confidence = 0.75&lt;BR&gt;lift = 1&lt;BR&gt;count = 3&lt;BR&gt;order = 2&#34;,&#34;&lt;B&gt;[4]&lt;\/B&gt;&lt;BR&gt;&lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{rice}&lt;\/B&gt;&lt;BR&gt;&lt;BR&gt;support = 0.5&lt;BR&gt;confidence = 0.667&lt;BR&gt;lift = 1.33&lt;BR&gt;count = 4&lt;BR&gt;order = 2&#34;,&#34;&lt;B&gt;[5]&lt;\/B&gt;&lt;BR&gt;&lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{apple}&lt;\/B&gt;&lt;BR&gt;&lt;BR&gt;support = 0.375&lt;BR&gt;confidence = 0.5&lt;BR&gt;lift = 1&lt;BR&gt;count = 3&lt;BR&gt;order = 2&#34;,&#34;&lt;B&gt;[6]&lt;\/B&gt;&lt;BR&gt;&lt;B&gt;{beer}&lt;\/B&gt;&lt;BR&gt;&amp;nbsp;&amp;nbsp; =&gt; &lt;B&gt;{milk}&lt;\/B&gt;&lt;BR&gt;&lt;BR&gt;support = 0.375&lt;BR&gt;confidence = 0.5&lt;BR&gt;lift = 1&lt;BR&gt;count = 3&lt;BR&gt;order = 2&#34;],&#34;shape&#34;:[&#34;box&#34;,&#34;box&#34;,&#34;box&#34;,&#34;box&#34;,&#34;circle&#34;,&#34;circle&#34;,&#34;circle&#34;,&#34;circle&#34;,&#34;circle&#34;,&#34;circle&#34;],&#34;x&#34;:[0.996495073723866,-1,1,0.33177320349987,0.929562982997801,-0.455729857058796,0.511988743815424,0.515681028603443,-0.440066774584428,0.927695654841687],&#34;y&#34;:[1,0.0316482297982752,-1,0.00137944417334968,0.481135037289498,-0.194197493726862,-0.69726058497054,0.687591311791381,0.222333646316521,-0.481124848005314]},&#34;edges&#34;:{&#34;from&#34;:[1,2,3,4,4,4,5,6,7,8,9,10],&#34;to&#34;:[5,6,7,8,9,10,4,4,4,1,2,3],&#34;arrows&#34;:[&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;,&#34;to&#34;]},&#34;nodesToDataframe&#34;:true,&#34;edgesToDataframe&#34;:true,&#34;options&#34;:{&#34;width&#34;:&#34;100%&#34;,&#34;height&#34;:&#34;100%&#34;,&#34;nodes&#34;:{&#34;shape&#34;:&#34;dot&#34;,&#34;scaling&#34;:{&#34;label&#34;:{&#34;enabled&#34;:true}},&#34;physics&#34;:false},&#34;manipulation&#34;:{&#34;enabled&#34;:false},&#34;edges&#34;:{&#34;smooth&#34;:false},&#34;physics&#34;:{&#34;stabilization&#34;:false},&#34;interaction&#34;:{&#34;hover&#34;:true}},&#34;groups&#34;:[&#34;item&#34;,&#34;rule&#34;],&#34;width&#34;:null,&#34;height&#34;:null,&#34;idselection&#34;:{&#34;enabled&#34;:true,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;useLabels&#34;:true,&#34;main&#34;:&#34;Select by id&#34;},&#34;byselection&#34;:{&#34;enabled&#34;:false,&#34;style&#34;:&#34;width: 150px; height: 26px&#34;,&#34;multiple&#34;:false,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;,&#34;highlight&#34;:false},&#34;main&#34;:null,&#34;submain&#34;:null,&#34;footer&#34;:null,&#34;background&#34;:&#34;rgba(0, 0, 0, 0)&#34;,&#34;igraphlayout&#34;:{&#34;type&#34;:&#34;square&#34;},&#34;tooltipStay&#34;:300,&#34;tooltipStyle&#34;:&#34;position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);&#34;,&#34;highlight&#34;:{&#34;enabled&#34;:true,&#34;hoverNearest&#34;:true,&#34;degree&#34;:1,&#34;algorithm&#34;:&#34;all&#34;,&#34;hideColor&#34;:&#34;rgba(200,200,200,0.5)&#34;,&#34;labelOnly&#34;:true},&#34;collapse&#34;:{&#34;enabled&#34;:false,&#34;fit&#34;:false,&#34;resetHighlight&#34;:true,&#34;clusterOptions&#34;:null,&#34;keepCoord&#34;:true,&#34;labelSuffix&#34;:&#34;(cluster)&#34;}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.6: Graph-based visualization
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;parallel-coordinate-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.9&lt;/span&gt; Parallel coordinate plot&lt;/h2&gt;
&lt;p&gt;Represents the rules (or itemsets) as a parallel coordinate plot (from LHS to RHS).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(subrules, method=&amp;quot;paracoord&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-25&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2020-05-14-r-association-rule-mining/index_files/figure-html/unnamed-chunk-25-1.png&#34; alt=&#34;Parallel coordinate plot&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4.7: Parallel coordinate plot
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The plot indicates that if a customer buys rice, he is likely to buy beer as well: {rice -&amp;gt; beer}. The same is true for the opposite direction: {beer -&amp;gt; rice}.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; References&lt;/h1&gt;
&lt;p&gt;Hahsler, M., &amp;amp; Karpienko, R. (2017). Visualizing association rules in hierarchical groups. Journal of Business Economics, 87(3), 317–335. &lt;a href=&#34;https://doi.org/10.1007/s11573-016-0822-8&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1007/s11573-016-0822-8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hornik, K., Grün, B., &amp;amp; Hahsler, M. (2005). arules - A computational environment for mining association rules and frequent item sets. Journal of Statistical Software, 14(15), 1–25.&lt;/p&gt;
&lt;p&gt;Leskovec, J., Rajaraman, A., &amp;amp; Ullman, J. D. (2020). Mining of massive data sets. Cambridge university press.&lt;/p&gt;
&lt;p&gt;Ng, A., &amp;amp; Soo, K. (2017). Numsense! Data Science for the Layman: No Math Added. Leanpub.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Programming Languages for Data Science</title>
      <link>/talk/2019-programming-languages/</link>
      <pubDate>Thu, 24 Oct 2019 09:00:00 +0000</pubDate>
      
      <guid>/talk/2019-programming-languages/</guid>
      <description>&lt;p&gt;Anhand von mehreren Fallstudien wird zunächst die Extraktion, Bearbeitung und Analyse von Daten in unterschiedlichen Datenbanken mit Hilfe von SQL eingehend behandelt. Der dabei gelernte SQL-Syntax – bspw.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Datenimport,&lt;/li&gt;
&lt;li&gt;Verknüpfung von Tabellen,&lt;/li&gt;
&lt;li&gt;Gruppierung und Summierung,&lt;/li&gt;
&lt;li&gt;Berechnung statistischer Kennzahlen, - Datenexploration,&lt;/li&gt;
&lt;li&gt;Analyse von Zeitdaten,&lt;/li&gt;
&lt;li&gt;Textanalysen und&lt;/li&gt;
&lt;li&gt;bedingte Ausdrücke (Conditional Expressions)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kann auf eine Vielzahl von Datenbanken wie bspw.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL,&lt;/li&gt;
&lt;li&gt;MySQL,&lt;/li&gt;
&lt;li&gt;Microsoft Azure SQL Datenbank, Google BigQuery und Oracle angewendet werden.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Im Rahmen der Datenanalyse mit R werden neben den zentralen Grundkenntnissen der Programmiersprache R insbesondere Kompetenzen im Umgang mit Datentransformationen („Data Wrangling“), der explorativen Datenanalyse und Visualisierung von Daten (bspw. mit Hilfe eines Dashboards) vermittelt. Zudem wird die Erstellung und Ausgabe (bspw. als HTML, PDF, Word, Excel, PPT,…) von Reports in R markdown behandelt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Applied Statistics</title>
      <link>/talk/2019-applied-statistics/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/talk/2019-applied-statistics/</guid>
      <description>



</description>
    </item>
    
    <item>
      <title>Text Mining in R</title>
      <link>/post/2019-09-16-r-text-mining/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-09-16-r-text-mining/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction-to-textmining-in-r&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Introduction to Textmining in R&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#installation-of-r-packages&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.1&lt;/span&gt; Installation of R packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-import&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1.2&lt;/span&gt; Data import&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-transformation&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Data transformation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tokenization&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.1&lt;/span&gt; Tokenization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stop-words&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2.2&lt;/span&gt; Stop words&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exploratory-data-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; Exploratory data analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#term-frequency-tf&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.1&lt;/span&gt; Term frequency (tf)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#term-frequency-and-inverse-document-frequency-tf-idf&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.2&lt;/span&gt; Term frequency and inverse document frequency (tf-idf)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tokenizing-by-n-gram&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.3&lt;/span&gt; Tokenizing by n-gram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#network-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3.4&lt;/span&gt; Network analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#classification-with-logistic-regression&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; Classification with logistic regression&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#train-test-split&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.1&lt;/span&gt; Train test split&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#training-data-sparse-matrix&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.2&lt;/span&gt; Training data (sparse matrix)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#response-variable&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.3&lt;/span&gt; Response variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#logistic-regression-model&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.4&lt;/span&gt; Logistic regression model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#model-evaluation-with-test-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4.5&lt;/span&gt; Model evaluation with test data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction-to-textmining-in-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Introduction to Textmining in R&lt;/h1&gt;
&lt;p&gt;This post demonstrates how various R packages can be used for text mining in R. In particular, we start with common text transformations, perform various data explorations with term frequency (tf) and inverse document frequency (idf) and build a supervised classifiaction model that learns the difference between texts of different authors.&lt;/p&gt;
&lt;p&gt;The content of this tutorial is based on the excellent book &lt;a href=&#34;https://www.tidytextmining.com&#34;&gt;“Textmining with R (2019)”&lt;/a&gt; from Julia Silge and David Robinson and the blog post &lt;a href=&#34;https://www.r-bloggers.com/text-classification-with-tidy-data-principles/&#34;&gt;“Text classification with tidy data principles (2018)”&lt;/a&gt; from Julia Silges.&lt;/p&gt;
&lt;div id=&#34;installation-of-r-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.1&lt;/span&gt; Installation of R packages&lt;/h2&gt;
&lt;p&gt;If you like to install all packages at once, use the code below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;quot;dplyr&amp;quot;, &amp;quot;gutenbergr&amp;quot;, &amp;quot;stringr&amp;quot;, &amp;quot;tidytext&amp;quot;, &amp;quot;tidyr&amp;quot;,
                   &amp;quot;stopwords&amp;quot;, &amp;quot;wordcloud&amp;quot;, &amp;quot;rsample&amp;quot;, &amp;quot;glmnet&amp;quot;, 
                   &amp;quot;doMC&amp;quot;, &amp;quot;forcats&amp;quot;, &amp;quot;broom&amp;quot;, &amp;quot;igraph&amp;quot;, &amp;quot;ggraph&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-import&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;1.2&lt;/span&gt; Data import&lt;/h2&gt;
&lt;p&gt;We can access the full texts of various books from “Project Gutenberg” via the &lt;a href=&#34;https://cran.r-project.org/web/packages/gutenbergr/vignettes/intro.html&#34;&gt;&lt;code&gt;gutenbergr&lt;/code&gt; package&lt;/a&gt;. We can look up certain authors or titles with a regular expression using the &lt;code&gt;stringr&lt;/code&gt; package. All functions in &lt;code&gt;stringr&lt;/code&gt; start with &lt;code&gt;str_&lt;/code&gt;and take a vector of strings as the first argument. To learn more about stringr, visit the &lt;a href=&#34;https://stringr.tidyverse.org&#34;&gt;stringr documentation&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gutenbergr)
library(stringr)

doyle &amp;lt;- gutenberg_works(str_detect(author, &amp;quot;Doyle&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gutenberg_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
title
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
gutenberg_author_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
language
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
gutenberg_bookshelf
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
rights
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
has_text
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
108
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Return of Sherlock Holmes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Doyle, Arthur Conan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
en
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Detective Fiction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Public domain in the USA.
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
126
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Poison Belt
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Doyle, Arthur Conan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
en
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Science Fiction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Public domain in the USA.
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
139
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Lost World
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Doyle, Arthur Conan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
en
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Science Fiction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Public domain in the USA.
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
244
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A Study in Scarlet
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Doyle, Arthur Conan
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
en
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Detective Fiction
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Public domain in the USA.
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We obtain &lt;em&gt;“Relativity: The Special and General Theory”&lt;/em&gt; by Albert Einstein (gutenberg_id: 30155) and &lt;em&gt;“Experiments with Alternate Currents of High Potential and High Frequency”&lt;/em&gt; by Nikola Tesla (gutenberg_id: 13476) from gutenberg and add the column “author” to the result.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(gutenbergr)

books &amp;lt;- gutenberg_download(c(30155, 13476), meta_fields = &amp;quot;author&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Furthermore, we transfrom the data to a &lt;a href=&#34;https://cran.r-project.org/web/packages/tibble/vignettes/tibble.html&#34;&gt;tibble&lt;/a&gt; (tibbles are a modern take on data frames), add the row number with the column name &lt;code&gt;document&lt;/code&gt; to the tibble and drop the column &lt;code&gt;gutenberg_id&lt;/code&gt;. We will use the information in column &lt;code&gt;document&lt;/code&gt; to train a model that can take an individual line (row) and give us a probability that the text in this particular line comes from a certain author.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)

books &amp;lt;- as_tibble(books) %&amp;gt;% 
  mutate(document = row_number()) %&amp;gt;% 
  select(-gutenberg_id)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
text
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
document
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
EXPERIMENTS WITH ALTERNATE CURRENTS OF HIGH POTENTIAL AND HIGH FREQUENCY
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A Lecture Delivered before the Institution of Electrical Engineers, London
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
by
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NIKOLA TESLA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-transformation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Data transformation&lt;/h1&gt;
&lt;div id=&#34;tokenization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.1&lt;/span&gt; Tokenization&lt;/h2&gt;
&lt;p&gt;First of all, we need to both break the text into individual tokens (a process called &lt;strong&gt;tokenization&lt;/strong&gt;) and transform it to a tidy data structure (i.e. each variable must have its own column, each observation must have its own row and each value must have its own cell). To do this, we use tidytext’s &lt;code&gt;unnest_tokens()&lt;/code&gt; function. We also remove the &lt;em&gt;rarest words&lt;/em&gt; in that step, keeping only words in our dataset that occur more than 10 times.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(tidytext)

tidy_books &amp;lt;- books %&amp;gt;%
  unnest_tokens(word, text) %&amp;gt;%
  group_by(word) %&amp;gt;%
  filter(n() &amp;gt; 10) %&amp;gt;%
  ungroup()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
document
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
experiments
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
with
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
alternate
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
currents
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
of
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
high
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
potential
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
and
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;stop-words&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;2.2&lt;/span&gt; Stop words&lt;/h2&gt;
&lt;p&gt;Now that the data is in a tidy “one-word-per-row” format, we can manipulate it with packages like &lt;code&gt;dplyr&lt;/code&gt;. Often in text analysis, we will want to remove &lt;strong&gt;stop words&lt;/strong&gt;: Stop words are words that are not useful for an analysis, typically extremely common words such as “the”, “of”, “to”, and so forth. We can remove stop words in our data by using the stop words provided in the package &lt;code&gt;stopwords&lt;/code&gt; with an &lt;code&gt;anti_join()&lt;/code&gt; from the package &lt;code&gt;dplyr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stopwords) 
library(dplyr)
library(tibble)

stopword &amp;lt;- as_tibble(stopwords::stopwords(&amp;quot;en&amp;quot;)) 
stopword &amp;lt;- rename(stopword, word=value)
tb &amp;lt;- anti_join(tidy_books, stopword, by = &amp;#39;word&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
document
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
experiments
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
alternate
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
currents
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
high
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
potential
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
high
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
frequency
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
lecture
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The tidy data structure allows different types of exploratory data analysis (EDA), which we turn to next.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; Exploratory data analysis&lt;/h1&gt;
&lt;div id=&#34;term-frequency-tf&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.1&lt;/span&gt; Term frequency (tf)&lt;/h2&gt;
&lt;p&gt;An important question in text mining is how to quantify what a document is about. One measure of how important a word may be is its &lt;strong&gt;term frequency&lt;/strong&gt; (tf), i.e. how frequently a word occurs in a document.&lt;/p&gt;
&lt;p&gt;We can start by using &lt;code&gt;dplyr&lt;/code&gt; to explore the most commonly used words.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)

word_count &amp;lt;- count(tb, word, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
one
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
230
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
may
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
224
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
can
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
194
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
relativity
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
193
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Term frequency by author:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)

author_count &amp;lt;-  tb %&amp;gt;% 
  count(author, word, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
relativity
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
193
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
may
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
184
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
theory
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
181
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
bulb
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
171
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
coil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
166
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
high
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
166
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
156
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
one
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
156
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reference
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
150
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
tube
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
147
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Plot terms with a frequency greater than 100:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(ggplot2)

tb %&amp;gt;%
  count(author, word, sort = TRUE) %&amp;gt;%
  filter(n &amp;gt; 100) %&amp;gt;%
  mutate(word = reorder(word, n)) %&amp;gt;%
  ggplot(aes(word, n)) +
  geom_col(aes(fill=author)) +
  xlab(NULL) +
  scale_y_continuous(expand = c(0, 0)) +
  coord_flip() +
  theme_classic(base_size = 12) +
  labs(fill= &amp;quot;Author&amp;quot;, title=&amp;quot;Word frequency&amp;quot;, subtitle=&amp;quot;n &amp;gt; 100&amp;quot;)+
  theme(plot.title = element_text(lineheight=.8, face=&amp;quot;bold&amp;quot;)) +
  scale_fill_brewer() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Plot top 20 terms by author:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

tb %&amp;gt;%
  count(author, word, sort = TRUE) %&amp;gt;%
  group_by(author) %&amp;gt;%
  top_n(20) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(reorder_within(word, n, author), n,
    fill = author)) +
  geom_col(alpha = 0.8, show.legend = FALSE) +
  scale_x_reordered() +
  coord_flip() +
  facet_wrap(~author, scales = &amp;quot;free&amp;quot;) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_classic(base_size = 12) +
  labs(fill= &amp;quot;Author&amp;quot;, 
       title=&amp;quot;Most frequent words&amp;quot;, 
       subtitle=&amp;quot;Top 20 words by book&amp;quot;,
       x= NULL, 
       y= &amp;quot;Word Count&amp;quot;)+
  theme(plot.title = element_text(lineheight=.8, face=&amp;quot;bold&amp;quot;)) +
  scale_fill_brewer()   &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You may notice expressions like “_k”, “co” in the Einstein text and “fig” in the Tesla text. Let’s remove these and other less meaningful words with a custom list of stop words and use anti_join() to remove them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;newstopwords &amp;lt;- tibble(word = c(&amp;quot;eq&amp;quot;, &amp;quot;co&amp;quot;, &amp;quot;rc&amp;quot;, &amp;quot;ac&amp;quot;, &amp;quot;ak&amp;quot;, &amp;quot;bn&amp;quot;, 
                                   &amp;quot;fig&amp;quot;, &amp;quot;file&amp;quot;, &amp;quot;cg&amp;quot;, &amp;quot;cb&amp;quot;, &amp;quot;cm&amp;quot;,
                               &amp;quot;ab&amp;quot;, &amp;quot;_k&amp;quot;, &amp;quot;_k_&amp;quot;, &amp;quot;_x&amp;quot;))

tb &amp;lt;- anti_join(tb, newstopwords, by = &amp;quot;word&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we plot the data again without the new stopwords:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

tb %&amp;gt;%
  count(author, word, sort = TRUE) %&amp;gt;%
  group_by(author) %&amp;gt;%
  top_n(20) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(reorder_within(word, n, author), n,
    fill = author)) +
  geom_col(alpha = 0.8, show.legend = FALSE) +
  scale_x_reordered() +
  coord_flip() +
  facet_wrap(~author, scales = &amp;quot;free&amp;quot;) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_classic(base_size = 12) +
  labs(fill= &amp;quot;Author&amp;quot;, 
       title=&amp;quot;Most frequent words after removing stop words&amp;quot;, 
       subtitle=&amp;quot;Top 20 words by book&amp;quot;,
       x= NULL, 
       y= &amp;quot;Word Count&amp;quot;)+
  theme(plot.title = element_text(lineheight=.8, face=&amp;quot;bold&amp;quot;)) +
  scale_fill_brewer()   &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You also may want to visualize the most frequent terms as a simple word cloud:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(wordcloud)

tb %&amp;gt;%
  count(word) %&amp;gt;%
  with(wordcloud(word, n, max.words = 15))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;term-frequency-and-inverse-document-frequency-tf-idf&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.2&lt;/span&gt; Term frequency and inverse document frequency (tf-idf)&lt;/h2&gt;
&lt;p&gt;Term frequency is a useful measure to determine how frequently a word occurs in a document. There are words in a document, however, that occur many times but may not be important.&lt;/p&gt;
&lt;p&gt;Another approach is to look at a term’s &lt;strong&gt;inverse document frequency (idf)&lt;/strong&gt;, which decreases the weight for commonly used words and increases the weight for words that are not used very much in a collection of documents. This can be combined with term frequency to calculate a term’s tf-idf (the two quantities multiplied together), the frequency of a term adjusted for how rarely it is used.&lt;/p&gt;
&lt;p&gt;The inverse document frequency for any given term is defined as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[idf(\text{term}) = \ln{\left(\frac{n_{\text{documents}}}{n_{\text{documents containing term}}}\right)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hence, term frequency and inverse document frequency allows us to find words that are characteristic for one document within a collection of documents. The &lt;code&gt;tidytext&lt;/code&gt; package uses an implementation of tf-idf consistent with tidy data principles that enables us to see how different words are important in documents within a collection or corpus of documents.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(forcats)

plot_tb &amp;lt;- tb %&amp;gt;%
  count(author, word, sort = TRUE) %&amp;gt;%
  bind_tf_idf(word, author, n) %&amp;gt;%
  mutate(word = fct_reorder(word, tf_idf)) %&amp;gt;%
  mutate(author = factor(author, 
                         levels = c(&amp;quot;Tesla, Nikola&amp;quot;,
                                    &amp;quot;Einstein, Albert&amp;quot;)))

plot_tb %&amp;gt;% 
  group_by(author) %&amp;gt;% 
  top_n(15, tf_idf) %&amp;gt;% 
  ungroup() %&amp;gt;%
  mutate(word = reorder(word, tf_idf)) %&amp;gt;%
  ggplot(aes(word, tf_idf, fill = author)) +
  scale_y_continuous(expand = c(0, 0)) +
  geom_col(show.legend = FALSE) +
  labs(x = NULL, y = &amp;quot;tf-idf&amp;quot;) +
  facet_wrap(~author, ncol = 2, scales = &amp;quot;free&amp;quot;) +
  coord_flip() +
  theme_classic(base_size = 12) +
  labs(fill= &amp;quot;Author&amp;quot;, 
       title=&amp;quot;Term frequency and inverse document frequency (tf-idf)&amp;quot;, 
       subtitle=&amp;quot;Top 20 words by book&amp;quot;,
       x= NULL, 
       y= &amp;quot;tf-idf&amp;quot;) +
  theme(plot.title = element_text(lineheight=.8, face=&amp;quot;bold&amp;quot;)) +
  scale_fill_brewer()  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In particular, the &lt;code&gt;bind_tf_idf&lt;/code&gt; function in the &lt;code&gt;tidytext&lt;/code&gt; package takes a tidy text dataset as input with one row per token (term), per document. One column (word here) contains the terms/tokens, one column contains the documents (authors in this case), and the last necessary column contains the counts, how many times each document contains each term (n in this example).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tf_idf &amp;lt;- tb %&amp;gt;%
  count(author, word, sort = TRUE) %&amp;gt;%
  bind_tf_idf(word, author, n)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
tf
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
idf
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
tf_idf
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
relativity
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
193
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0177831
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6931472
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0123263
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
may
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
184
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0139436
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
theory
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
181
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0166774
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6931472
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0115599
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
bulb
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
171
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0129585
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6931472
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0089821
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
coil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
166
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0125796
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6931472
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0087195
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
high
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
166
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0125796
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
156
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0143739
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
one
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
156
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0118218
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reference
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
150
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0138211
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
tube
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
147
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0111397
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000000
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Notice that &lt;em&gt;idf&lt;/em&gt; and thus &lt;em&gt;tf-idf&lt;/em&gt; are zero for extremely common words (like “may”). These are all words that appear in both documents, so the idf term (which will then be the natural log of 1) is zero. The inverse document frequency (and thus tf-idf) is very low (near zero) for words that occur in many of the documents in a collection; this is how this approach decreases the weight for common words. The inverse document frequency will be a higher number for words that occur in fewer of the documents in the collection.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tokenizing-by-n-gram&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.3&lt;/span&gt; Tokenizing by n-gram&lt;/h2&gt;
&lt;p&gt;We’ve been using the &lt;code&gt;unnest_tokens&lt;/code&gt; function to tokenize by word, or sometimes by sentence, which is useful for the kinds of frequency analyses we’ve been doing so far. But we can also use the function to tokenize into consecutive sequences of words, called &lt;strong&gt;n-grams&lt;/strong&gt;. By seeing how often word X is followed by word Y, we can then build a model of the relationships between them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(tidytext)

einstein_bigrams &amp;lt;- books %&amp;gt;%
  filter(author == &amp;quot;Einstein, Albert&amp;quot;) %&amp;gt;% 
  unnest_tokens(bigram, text, token = &amp;quot;ngrams&amp;quot;, n = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
document
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
bigram
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3797
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3798
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3799
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3800
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3801
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
relativity the
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3801
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the special
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3801
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
special and
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3801
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
and general
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3801
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
general theory
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Einstein, Albert
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3802
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We can examine the most common bigrams using dplyr’s &lt;code&gt;count()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;einstein_bigrams_count &amp;lt;- einstein_bigrams %&amp;gt;% 
    count(bigram, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
bigram
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
916
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
of the
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
613
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
to the
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
247
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in the
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
197
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
of relativity
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
164
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
theory of
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
121
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
with the
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
119
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
on the
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
111
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
that the
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
110
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
of a
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
98
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now we use tidyr’s &lt;code&gt;separate()&lt;/code&gt;, which splits a column into multiple columns based on a delimiter. This lets us separate it into two columns, “word1” and “word2”, at which point we can remove cases where either is a stop-word. This time, we use the stopwords from the package &lt;code&gt;tidyr&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyr)

# seperate words
bigrams_separated &amp;lt;- einstein_bigrams %&amp;gt;%
  separate(bigram, c(&amp;quot;word1&amp;quot;, &amp;quot;word2&amp;quot;), sep = &amp;quot; &amp;quot;)

# filter stop words and NA
bigrams_filtered &amp;lt;- bigrams_separated %&amp;gt;%
  filter(!word1 %in% stop_words$word) %&amp;gt;%
  filter(!word2 %in% stop_words$word) %&amp;gt;% 
  filter(!is.na(word1))

# new bigram counts:
bigram_counts &amp;lt;- bigrams_filtered %&amp;gt;% 
  count(word1, word2, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word1
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word2
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reference
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
56
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
gravitational
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
field
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
special
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
theory
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ordinate
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
system
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
space
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
time
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
classical
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
mechanics
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
lorentz
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
transformation
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
23
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
measuring
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
rods
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
straight
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
line
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
rigid
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This one-bigram-per-row format is helpful for exploratory analyses of the text. As a simple example, we might be interested in the most often mentioned “theory”:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bigram_theory &amp;lt;- bigrams_filtered %&amp;gt;%
  filter(word2 == &amp;quot;theory&amp;quot;) %&amp;gt;%
  count(word1, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word1
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
special
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
lorentz
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
newton’s
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_special
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
comprehensive
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
electrodynamic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
electromagnetic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In other analyses you may be interested in the most common trigrams, which are consecutive sequences of 3 words. We can find this by setting n = 3:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trigram &amp;lt;- books %&amp;gt;%
  unnest_tokens(trigram, text, token = &amp;quot;ngrams&amp;quot;, n = 3) %&amp;gt;%
  separate(trigram, c(&amp;quot;word1&amp;quot;, &amp;quot;word2&amp;quot;, &amp;quot;word3&amp;quot;), sep = &amp;quot; &amp;quot;) %&amp;gt;%
  filter(!word1 %in% stop_words$word,
         !word2 %in% stop_words$word,
         !word3 %in% stop_words$word,  
         !is.na(word1)) %&amp;gt;%
  count(word1, word2, word3, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word1
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word2
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
word3
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_x_1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_x_2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_x_3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
light
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_in
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
vacuo_
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reference
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;em&gt;k&lt;/em&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
space
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
time
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
continuum
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_x_2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_x_3
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_x_4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
reference
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
body
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_k
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
disruptive
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
discharge
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
coil
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;network-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;3.4&lt;/span&gt; Network analysis&lt;/h2&gt;
&lt;p&gt;We may be interested in visualizing all of the relationships among words simultaneously, rather than just the top few at a time. As one common visualization, we can arrange the words into a network, or “graph.” Here we’ll be referring to a “graph” not in the sense of a visualization, but as a combination of connected nodes. A graph can be constructed from a tidy object since it has three variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from: the node an edge is coming from&lt;/li&gt;
&lt;li&gt;to: the node an edge is going towards&lt;/li&gt;
&lt;li&gt;weight: A numeric value associated with each edge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;igraph&lt;/code&gt; package has many functions for manipulating and analyzing networks. One way to create an igraph object from tidy data is the &lt;code&gt;graph_from_data_frame()&lt;/code&gt; function, which takes a data frame of edges with columns for “from”, “to”, and edge attributes (in this case n):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(igraph)

# filter for only relatively common combinations
bigram_graph &amp;lt;- bigram_counts %&amp;gt;%
  filter(n &amp;gt; 5) %&amp;gt;%
  graph_from_data_frame()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use the &lt;a href=&#34;https://cran.r-project.org/web/packages/ggraph/ggraph.pdf&#34;&gt;&lt;code&gt;ggraph&lt;/code&gt;&lt;/a&gt; package to convert the igraph object into a &lt;code&gt;ggraph&lt;/code&gt; with the ggraph function, after which we add layers to it, much like layers are added in ggplot2. For example, for a basic graph we need to add three layers: nodes, edges, and text:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggraph)
set.seed(123)

ggraph(bigram_graph, layout = &amp;quot;fr&amp;quot;) +
  geom_edge_link() +
  geom_node_point() +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Finally, we will change some settings to obtain to a better looking graph:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We add the &lt;code&gt;edge_alpha&lt;/code&gt; aesthetic to the link layer to make links transparent based on how common or rare the bigram is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We add directionality with an arrow, constructed using &lt;code&gt;grid::arrow()&lt;/code&gt;, including an &lt;code&gt;end_cap&lt;/code&gt; option that tells the arrow to end before touching the node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We tinker with the options to the node layer to make the nodes more attractive (larger, blue points).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We add a theme that’s useful for plotting networks, &lt;code&gt;theme_void()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggraph)
set.seed(123)

a &amp;lt;- grid::arrow(type = &amp;quot;closed&amp;quot;, length = unit(.15, &amp;quot;inches&amp;quot;))

ggraph(bigram_graph, layout = &amp;quot;fr&amp;quot;) +
  geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
                 arrow = a, end_cap = circle(.07, &amp;#39;inches&amp;#39;)) +
  geom_node_point(color = &amp;quot;lightblue&amp;quot;, size = 5) +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-35-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;classification-with-logistic-regression&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; Classification with logistic regression&lt;/h1&gt;
&lt;p&gt;In the first part we will build a statistical learning model. In the second part we will want to test it and assess its quality. Without dividing the dataset we would test the model on the data which the algorithm have already seen, which is why we start by splitting the data.&lt;/p&gt;
&lt;div id=&#34;train-test-split&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.1&lt;/span&gt; Train test split&lt;/h2&gt;
&lt;p&gt;Let’s go back to the original &lt;code&gt;books&lt;/code&gt; dataset (not the &lt;code&gt;tidy_books&lt;/code&gt; dataset) because the lines of text are our individual observations.&lt;/p&gt;
&lt;p&gt;We could use functions from the &lt;a href=&#34;https://tidymodels.github.io/rsample/&#34;&gt;&lt;code&gt;rsample&lt;/code&gt;&lt;/a&gt; package to generate resampled datasets, but the specific modeling approach we’re going to use will do that for us so we only need a simple train/test split.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rsample)

books_split &amp;lt;- books %&amp;gt;%
  select(document) %&amp;gt;%
  initial_split(prop = 3/4)

train_data &amp;lt;- training(books_split)
test_data &amp;lt;- testing(books_split)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that we just select specific text rows (column &lt;code&gt;document&lt;/code&gt;) for training and others for our test data (we set the proportion of data to be retained for modeling/analysis to 3/4) without selecting the actual text lines at this point.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;training-data-sparse-matrix&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.2&lt;/span&gt; Training data (sparse matrix)&lt;/h2&gt;
&lt;p&gt;Now we want to transform our training data from a tidy data structure to a “sparse matrix” (these objects can be treated as though they were matrices, for example accessing particular rows and columns, but are stored in a more efficient format) to use for our classification algorithm.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidytext)

sparse_words &amp;lt;- tidy_books %&amp;gt;%
  count(document, word) %&amp;gt;%
  inner_join(train_data, by = &amp;quot;document&amp;quot;) %&amp;gt;%
  cast_sparse(document, word, n)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(sparse_words)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4782  892&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have over 4,700 training observations and almost 900 features. Text feature space handled in this way is very high dimensional, so we need to take that into account when considering our modeling approach.&lt;/p&gt;
&lt;p&gt;One reason this overall approach is flexible is that you could at this point &lt;code&gt;cbind()&lt;/code&gt; other columns, such as non-text numeric data, onto this sparse matrix. Then you can use this combination of text and non-text data as your predictors in the classifiaction algorithm, and the regularized regression algorithm we are going to use will find which are important for your problem space.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;response-variable&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.3&lt;/span&gt; Response variable&lt;/h2&gt;
&lt;p&gt;We also need to build a tibble with a &lt;strong&gt;response variable&lt;/strong&gt; to associate each of the &lt;code&gt;rownames()&lt;/code&gt; of the sparse matrix with an author, to use as the quantity we will predict in the model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;word_rownames &amp;lt;- as.integer(rownames(sparse_words))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;books_joined &amp;lt;- tibble(document = word_rownames) %&amp;gt;%
  left_join(books  %&amp;gt;%
    select(document, author))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;font-size: condensedpx; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
document
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
author
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tesla, Nikola
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;logistic-regression-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.4&lt;/span&gt; Logistic regression model&lt;/h2&gt;
&lt;p&gt;Now it’s time to train our classification model. Let’s use the &lt;code&gt;glmnet&lt;/code&gt; package to fit a logistic regression model with &lt;em&gt;lasso&lt;/em&gt; (least absolute shrinkage and selection operator; also Lasso or LASSO) regularization. This regression analysis method performs both variable selection and regularization in order to enhance the prediction accuracy and interpretability of the statistical model it produces.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Glmnet&lt;/code&gt; is a package that fits lasso models via penalized maximum likelihood. We do not cover the method and glmnet package in detail at this point, but if you want to learn more about glmnet and lasso regression, review the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/glmnet/vignettes/glmnet_beta.pdf&#34;&gt;Introduction to glmnet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/glmnet/glmnet.pdf&#34;&gt;glmnet documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kirenz.com/post/2019-08-12-python-lasso-regression-auto/&#34;&gt;LASSO regression in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The package is very useful for text classification because the variable selection that lasso regularization performs can tell you which words are important for your prediction problem. The glmnet package also supports parallel processing, so we can train on multiple cores with &lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-validation_(statistics)&#34;&gt;cross-validation&lt;/a&gt; on the training set using &lt;code&gt;cv.glmnet()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(glmnet)
library(doMC)
registerDoMC(cores = 8)

is_einstein &amp;lt;- books_joined$author == &amp;quot;Einstein, Albert&amp;quot;

model &amp;lt;- cv.glmnet(sparse_words, 
                   is_einstein,
                   family = &amp;quot;binomial&amp;quot;,
                   parallel = TRUE, 
                   keep = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s use the package &lt;a href=&#34;https://cran.r-project.org/web/packages/broom/vignettes/broom.html&#34;&gt;&lt;code&gt;broom&lt;/code&gt;&lt;/a&gt; (the broom package takes the messy output of built-in functions in R, such as lm, nls, or t.test, and turns them into tidy data frames) to check out the coefficients of the model, for the largest value of lambda with error within 1 standard error of the minimum (&lt;code&gt;lambda.1se&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(broom)

coefs &amp;lt;- model$glmnet.fit %&amp;gt;%
  tidy() %&amp;gt;%
  filter(lambda == model$lambda.1se)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which coefficents are the largest in size, in each direction:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(forcats)

coefs %&amp;gt;%
  group_by(estimate &amp;gt; 0) %&amp;gt;%
  top_n(10, abs(estimate)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(aes(fct_reorder(term, estimate), estimate, fill = estimate &amp;gt; 0)) +
  geom_col(alpha = 0.8, show.legend = FALSE) +
  coord_flip() +
  labs(
    x = NULL,
    title = &amp;quot;Coefficients that increase/decrease probability the most&amp;quot;,
    subtitle = &amp;quot;A document mentioning lecture or probably is unlikely to be written by Albert Einstein&amp;quot;
  ) +
  theme_classic(base_size = 12) +
  theme(plot.title = element_text(lineheight=.8, face=&amp;quot;bold&amp;quot;)) +
  scale_fill_brewer()  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-44-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;model-evaluation-with-test-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;span class=&#34;header-section-number&#34;&gt;4.5&lt;/span&gt; Model evaluation with test data&lt;/h2&gt;
&lt;p&gt;Now we want to evaluate how well this model is doing using the test data that we held out and did not use for training the model. Let’s create a dataframe that tells us, for each document in the test set, the probability of being written by Albert Einstein.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;intercept &amp;lt;- coefs %&amp;gt;%
  filter(term == &amp;quot;(Intercept)&amp;quot;) %&amp;gt;%
  pull(estimate)

classifications &amp;lt;- tidy_books %&amp;gt;%
  inner_join(test_data) %&amp;gt;%
  inner_join(coefs, by = c(&amp;quot;word&amp;quot; = &amp;quot;term&amp;quot;)) %&amp;gt;%
  group_by(document) %&amp;gt;%
  summarize(score = sum(estimate)) %&amp;gt;%
  mutate(probability = plogis(intercept + score))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;font-size: condensedpx; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
document
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
score
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
probability
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1.3811800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2063129
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1.9929541
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1235678
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.2522803
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7834973
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1.8746267
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1369635
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
52
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5.1987683
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0056813
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
54
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2.8148527
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0583613
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
56
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2272565
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5649167
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now let’s use the &lt;a href=&#34;https://tidymodels.github.io/yardstick/&#34;&gt;&lt;code&gt;yardstick&lt;/code&gt;&lt;/a&gt; package (yardstick is a package to estimate how well models are working using tidy data principles) to calculate some model performance metrics. For example, what does the &lt;a href=&#34;https://developers.google.com/machine-learning/crash-course/classification/roc-and-auc&#34;&gt;ROC curve&lt;/a&gt; (receiver operating characteristic curve - a graph showing the performance of a classification model at all classification thresholds) look like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(yardstick)

comment_classes &amp;lt;- classifications %&amp;gt;%
  left_join(books %&amp;gt;%
    select(author, document), by = &amp;quot;document&amp;quot;) %&amp;gt;%
  mutate(author = as.factor(author))

comment_classes %&amp;gt;%
  roc_curve(author, probability) %&amp;gt;%
  ggplot(aes(x = 1 - specificity, y = sensitivity)) +
  geom_line(
    color = &amp;quot;midnightblue&amp;quot;,
    size = 1.5
  ) +
  geom_abline(
    lty = 2, alpha = 0.5,
    color = &amp;quot;gray50&amp;quot;,
    size = 1.2
  ) +
  labs(
    title = &amp;quot;ROC curve for text classification using regularized regression&amp;quot;,
    subtitle = &amp;quot;Predicting whether text was written by Albert Einstein or Nikola Tesla&amp;quot;
  ) +
  theme_classic(base_size = 12) +
  theme(plot.title = element_text(lineheight=.8, face=&amp;quot;bold&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-09-16-r-text-mining/index_files/figure-html/unnamed-chunk-47-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s obtain the accuracy (AUC - the fraction of predictions that a classification model got right) on the test data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;auc &amp;lt;- comment_classes %&amp;gt;%
  roc_auc(author, probability)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;font-size: condensedpx; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
.metric
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
.estimator
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
.estimate
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
roc_auc
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
binary
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9757987
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Next we turn to the &lt;strong&gt;confusion matrix&lt;/strong&gt;. Let’s make the following definitions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“Einstein, Albert” is a positive class.&lt;/li&gt;
&lt;li&gt;“Tesla, Nikola” is a negative class.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;span style=&#34;color:green&#34;&gt; &lt;strong&gt;True Positive (TP):&lt;/strong&gt; &lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span style=&#34;color:red&#34;&gt; &lt;strong&gt;False Positive (FP):&lt;/strong&gt; &lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Reality&lt;/strong&gt;: Text is from Einstein&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Reality&lt;/strong&gt;: Text is from Tesla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;Model&lt;/strong&gt;: Text is from Einstein&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Model&lt;/strong&gt;: Text is from Einstein&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;span style=&#34;color:red&#34;&gt; &lt;strong&gt;False Negative (FN):&lt;/strong&gt; &lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span style=&#34;color:green&#34;&gt; &lt;strong&gt;True Negative (TN):&lt;/strong&gt; &lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;Reality&lt;/strong&gt;: Text is from Einstein&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Reality&lt;/strong&gt;: Text is from Tesla&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;Model&lt;/strong&gt;: Text is from Tesla&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Model&lt;/strong&gt;: Text is from Tesla&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We can summarize our “einstein-text-prediction” model using a 2x2 confusion matrix that depicts all four possible outcomes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A &lt;em&gt;true positive&lt;/em&gt; is an outcome where the model correctly predicts the positive class (Einstein). Similarly, a &lt;em&gt;true negative&lt;/em&gt; is an outcome where the model correctly predicts the negative class (Tesla).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;em&gt;false positive&lt;/em&gt; is an outcome where the model incorrectly predicts the positive class. And a &lt;em&gt;false negative&lt;/em&gt; is an outcome where the model incorrectly predicts the negative class.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s use a probability of 0.5 as our threshold. That means all model predictions with a probability greater than 50% get labeld as beeing text from Einstein:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;comment_classes %&amp;gt;%
  mutate(prediction = case_when(
          probability &amp;gt; 0.5 ~ &amp;quot;Einstein, Albert&amp;quot;,
          TRUE ~ &amp;quot;Tesla, Nikola&amp;quot;),
        prediction = as.factor(prediction)) %&amp;gt;%
  conf_mat(author, prediction)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                   Truth
## Prediction         Einstein, Albert Tesla, Nikola
##   Einstein, Albert              628            58
##   Tesla, Nikola                  70           784&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s take a closer look at these misclassifications: false negatives (FN) and false positives (FP). Which documents here were incorrectly predicted to be written by Albert Einstein, at the extreme probability end of greater than 80% (false positive)?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;FP&amp;lt;- comment_classes %&amp;gt;%
  filter(probability &amp;gt; .8,
          author == &amp;quot;Tesla, Nikola&amp;quot;) %&amp;gt;%
  sample_n(10) %&amp;gt;%
  inner_join(books %&amp;gt;%
  select(document, text)) %&amp;gt;%
  select(probability, text)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;font-size: condensedpx; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
probability
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
text
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8189629
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
through things. He is an omnivorous reader, who never forgets; and he
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9012553
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
our sense of vision.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8094770
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
enormous distance without affecting greatly the character of the
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9058630
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
experience of to-day enables us to see clearly why these coils under
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8509898
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
discharger I have been able to maintain an oscillating motion without
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8119290
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
little thought leads us to the conclusion that, could we but reach
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9086652
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
disc, which could be seen from a considerable distance, such is the
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9440000
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
obtainable at any point of the universe. This idea is not novel. Men
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9069282
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Leaving practicability out of consideration, this, then, would be the
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8595897
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
plant, and on returning to Paris sought to carry out a number of ideas
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These documents were incorrectly predicted to be written by Albert Einstein. However, they were written by Nikola Tesla.&lt;/p&gt;
&lt;p&gt;Finally, let’s take a look at the texts which are from Albert Einstein that the model did not correctly identify (false negative):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;FN &amp;lt;- comment_classes %&amp;gt;%
  filter(probability &amp;lt; .3,
         author == &amp;quot;Einstein, Albert&amp;quot;) %&amp;gt;%
  sample_n(10) %&amp;gt;%
  inner_join(books %&amp;gt;%
  select(document, text)) %&amp;gt;%
  select(probability, text)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;font-size: condensedpx; width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
probability
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
text
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0969140
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
be arbitrary, although it was always tacitly made even before the
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1989692
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
strings to the floor, otherwise the slightest impact against the floor
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1994746
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
local variations of temperature, and with which we made acquaintance as
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1932809
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
the conservation of energy (and of impulse).
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0546119
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
me—and rightly so—and you declare: “I maintain my previous definition
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0613870
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
permits of our answering it with a moderate degree of certainty, and in
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2458622
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
treated in detail and with unsurpassable lucidity by Helmholtz and
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1886392
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
gravitational potential, then the study of this displacement will
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1570832
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
for the following reason. As a result of the more careful study of
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0134175
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
throwing it. Then, disregarding the influence of the air resistance, I
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We can conclude that the model did a very good job in predicting the authors of the texts. Furthermore, the texts of the misclassifications are quite short and we can imagine, that even a human reader who is familiar with the work of Einstein and Tesla would have difficulties to classify them correctly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Programming Languages for Data Science</title>
      <link>/project/programming-languages/</link>
      <pubDate>Tue, 03 Sep 2019 10:00:00 +0000</pubDate>
      
      <guid>/project/programming-languages/</guid>
      <description>


&lt;div id=&#34;agenda&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Agenda&lt;/h1&gt;
&lt;div id=&#34;einfuhrung&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Einführung&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.kirenz.com/slides/intro-business-intelligence/assets/player/keynotedhtmlplayer#0&#34;&gt;Einführung in Business Intelligence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.kirenz.com/slides/markdown-first-steps/markdown-guide.html#1&#34;&gt;First steps in Markdown&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;sql&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;SQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Datenexploration (Selektieren, Ordnen und Filtern)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Datentypen und Datentransformationen&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gruppieren und Aggregieren&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tabellen verbinden (Joins)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tabellen modifizieren&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Subqueries&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/kirenz/microsoft_azure_sql_database&#34;&gt;Microsoft Azure SQL Database&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Literatur:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;DeBarros, A. (2018). Practical SQL: A Beginner’s Guide to Storytelling with Data. No Starch Press.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;r-for-data-science&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R for Data Science&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First Steps in R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.kirenz.com/slides/r-for-data-science/assets/player/keynotedhtmlplayer#0&#34;&gt;Introduction to Data Science with R&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic Analytics in R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Exploration in R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Correlation Analysis in R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Natural Language Processing with R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Advanced Programming in R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Erstellung von interaktiven Tutorials in R.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Literatur:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://r4ds.had.co.nz&#34;&gt;Wickham, H., &amp;amp; Grolemund, G. (2016). R for data science: import, tidy, transform, visualize, and model data. O’Reilly Media, Inc.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://adv-r.hadley.nz&#34;&gt;Wickham, H. (2019). Advanced r. Chapman and Hall/CRC.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.tidytextmining.com&#34;&gt;Silge, J., &amp;amp; Robinson, D. (2017). Text mining with R: A tidy approach. “O’Reilly Media, Inc.”&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;Xie, Y. (2019). Bookdown: Authoring Books and Technical Documents with R Markdown. Chapman and Hall/CRC.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Correlation Tutorial with R</title>
      <link>/project/r-correlation-tutorial/</link>
      <pubDate>Sun, 11 Aug 2019 05:00:00 +0000</pubDate>
      
      <guid>/project/r-correlation-tutorial/</guid>
      <description>&lt;p&gt;Correlation is a way of measuring the extent to which two variables are related. This means we need to analyze whether as one variable increases, the other&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) increases,&lt;/li&gt;
&lt;li&gt;(2) decreases or&lt;/li&gt;
&lt;li&gt;(3) stays the same.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can be done by calculating the covariance or correlation of two variables.&lt;/p&gt;
&lt;p&gt;In this &lt;a href=&#34;https://github.com/kirenz/correlation/blob/master/Correlation.md&#34;&gt;Correlation Tutorial in R&lt;/a&gt;, we  use a small dataset to illustrate the concepts of covariance and correlation. You may also download the &lt;a href=&#34;https://github.com/kirenz/correlation/blob/master/Correlation.Rmd&#34;&gt;Rmarkdown file&lt;/a&gt; and open it in RStudio.&lt;/p&gt;
&lt;p&gt;Check your understanding with &lt;a href=&#34;https://github.com/kirenz/correlation/blob/master/Correlation_task.pdf&#34;&gt;multiple choice tasks&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Steps in R</title>
      <link>/project/r-first-steps/</link>
      <pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/r-first-steps/</guid>
      <description>&lt;h1 id=&#34;first-steps-in-r&#34;&gt;First Steps in R&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/R_logo.svg/200px-R_logo.svg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Download the PDF &lt;a href=&#34;https://github.com/kirenz/first-steps-in-r/blob/master/R_overview.pdf&#34;&gt;R overview&lt;/a&gt; to get an overview about R and a list of helpful resources (you need to download the file in order to use the embedded links).&lt;/p&gt;
&lt;h2 id=&#34;installing-r&#34;&gt;Installing R&lt;/h2&gt;
&lt;p&gt;The first step is to install R. You can download and install R from the &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;Comprehensive R Archive Network&lt;/a&gt; (CRAN).&lt;/p&gt;
&lt;p&gt;Windows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open the &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;Comprehensive R Archive Network&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click on “CRAN”. You’ll see a list of mirror sites, organized by country.&lt;/li&gt;
&lt;li&gt;Select a site near you.&lt;/li&gt;
&lt;li&gt;Click on “Windows” under “Download and Install R”.&lt;/li&gt;
&lt;li&gt;Click on “base”.&lt;/li&gt;
&lt;li&gt;Click on the link for downloading the latest version of R (an .exe file).&lt;/li&gt;
&lt;li&gt;When the download completes, double-click on the .exe file and answer the usual questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open the &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;Comprehensive R Archive Network&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click on “CRAN”.&lt;/li&gt;
&lt;li&gt;You’ll see a list of mirror sites, organized by country.&lt;/li&gt;
&lt;li&gt;Select a site near you.&lt;/li&gt;
&lt;li&gt;Click on “MacOS X”.&lt;/li&gt;
&lt;li&gt;Click on the .pkg file for the latest version of R, under “Files:”, to download it.&lt;/li&gt;
&lt;li&gt;When the download completes, double-click on the .pkg file and answer the usual questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installing-rstudio&#34;&gt;Installing RStudio&lt;/h2&gt;
&lt;p&gt;The next step is to install &lt;strong&gt;RStudio&lt;/strong&gt;, a free and open-source integrated development environment (IDE) for R. You can use it for viewing and running R scripts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;a href=&#34;https://www.rstudio.com/products/rstudio/#Desktop&#34;&gt;RStudio Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click the Download RStudio Desktop button.&lt;/li&gt;
&lt;li&gt;Select the installation file for your system.&lt;/li&gt;
&lt;li&gt;Run the installation file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;learn-r-basics&#34;&gt;Learn R Basics&lt;/h2&gt;
&lt;p&gt;First of all, you can take an online course to master the basics of R: Visit the interactive &lt;a href=&#34;https://www.datacamp.com/getting-started?step=2&amp;amp;track=r&#34;&gt;R-Course&lt;/a&gt; from DataCamp. With the knowledge gained in this courses, you will be ready to undertake your first very own data analysis.&lt;/p&gt;
&lt;p&gt;There are also open and free resources and reference guides for R. Two examples are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.statmethods.net/&#34;&gt;Quick-R&lt;/a&gt;: a quick online reference for data input, basic statistics and plots&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/doc/contrib/Short-refcard.pdf&#34;&gt;R reference card (PDF)&lt;/a&gt; by Tom Short&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Two key things you need to know about R is that you can get help for a function using &lt;code&gt;help&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;, like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r,eval=FALSE}&#34; data-lang=&#34;{r,eval=FALSE}&#34;&gt;?install.packages
help(&amp;quot;install.packages&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and the hash character represents comments, so text following these
characters is not interpreted:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;##This is just a comment
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;installing-r-packages&#34;&gt;Installing R Packages&lt;/h2&gt;
&lt;p&gt;The first R command we will run is &lt;code&gt;install.packages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An R package is a collection of functions, data, and documentation that extends the capabilities of base R.
Many of these functions are stored in CRAN. You can easily install packages from within RStudio if you know
the name of the packages.&lt;/p&gt;
&lt;p&gt;As an example, we are going to install the
package &lt;code&gt;dplyr&lt;/code&gt; which we use in our first data
analysis examples:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r,eval=FALSE}&#34; data-lang=&#34;{r,eval=FALSE}&#34;&gt;install.packages(&amp;quot;dplyr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can then load the package into our R sessions using the &lt;code&gt;library&lt;/code&gt; function:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;library(dplyr)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;From now on you will see that we sometimes load packages without
installing them. This is because you only need to install a package once,
but you need to reload it with the command &lt;code&gt;library&lt;/code&gt; every time you start
a new R session.&lt;/p&gt;
&lt;p&gt;If you try to load a package and get an error, it probably means you need to install it first.&lt;/p&gt;
&lt;p&gt;Review the &lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html&#34;&gt;dplyr-documentation&lt;/a&gt; to get an overview about the different functionalities of this package.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating Websites with R Markdown</title>
      <link>/project/blogdown-book/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/blogdown-book/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create Data Presentations with R Markdown</title>
      <link>/project/r-xaringan/</link>
      <pubDate>Thu, 01 Aug 2019 10:00:00 +0000</pubDate>
      
      <guid>/project/r-xaringan/</guid>
      <description>


&lt;p&gt;The xaringan package is an R Markdown extension based on the JavaScript library &lt;a href=&#34;https://remarkjs.com&#34;&gt;remark.js&lt;/a&gt; to generate HTML5 presentations in different &lt;a href=&#34;https://github.com/yihui/xaringan/tree/master/inst/rmarkdown/templates/xaringan/resources&#34;&gt;themes&lt;/a&gt; (&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/xaringan.html#ref-R-xaringan&#34;&gt;Xie 2019&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You can learn more about the usage of the xaringan package from this excellent &lt;a href=&#34;http://slides.yihui.name/xaringan/&#34;&gt;documentation&lt;/a&gt;, which is actually a set of slides generated from xaringan.&lt;/p&gt;
&lt;p&gt;Xie, Y. (2019). Xaringan: Presentation Ninja. &lt;a href=&#34;https://CRAN.R-project.org/package=xaringan&#34;&gt;CRAN&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Free books to learn Data Science &amp; Statistics with R</title>
      <link>/project/r-data-science-statistics/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/r-data-science-statistics/</guid>
      <description>&lt;p&gt;&amp;ldquo;&lt;strong&gt;R for Data Science&lt;/strong&gt;&amp;rdquo; offers an excellent introduction into data science in R with a focus on the popular package collection &lt;a href=&#34;https://www.tidyverse.org&#34;&gt;tidyverse&lt;/a&gt;. See how the &lt;em&gt;tidyverse&lt;/em&gt; makes data science faster, easier and more fun:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://r4ds.had.co.nz&#34;&gt;Wickham, H., &amp;amp; Grolemund, G. (2016). R for data science: import, tidy, transform, visualize, and model data. O&amp;rsquo;Reilly Media, Inc.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ldquo;&lt;strong&gt;An Introduction to Statistical Learning&lt;/strong&gt;&amp;rdquo; provides an accessible overview of the field of statistical learning with applications in R. This book presents important modeling and prediction techniques, along with relevant applications. Topics include linear regression, classification, resampling methods, shrinkage approaches, tree-based methods, support vector machines, clustering, and more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.statlearning.com&#34;&gt;James, G., Witten, D., Hastie, T., &amp;amp; Tibshirani, R. (2013). An introduction to statistical learning with applications in R (Corr. 7th printing 2017). New York: Springer.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ldquo;&lt;strong&gt;Statistical Thinking for the 21 Century&lt;/strong&gt;&amp;rdquo; and &amp;ldquo;&lt;strong&gt;Modern Dive: Statistical Inference via Data Science&lt;/strong&gt;&amp;rdquo; are both open-source digital textbooks which provide a great introduction into the fundamentals of modern quantitative methods which take advantage of today’s increased computing power to solve statistical problems with R:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://statsthinking21.org&#34;&gt;Poldrack, R. A. (2019). Statistical Thinking for the 21 Century. http://thinkstats.org.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://moderndive.com/index.html#sec:intro-for-students&#34;&gt;Ismay, C. &amp;amp; Kim, A. Y. (2019). Modern Dive: Statistical Inference via Data Science. https://moderndive.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
